#!/bin/sh

# Locate an acceptable Python interpreter and then re-execute the script.
# Note that the mix of single and double quotes is intentional,
# as is the fact that the ] goes on a new line.
_=[ 'exec' '/bin/sh' '-c' '''
command -v python3.11 >/dev/null && exec python3.11 "$0" "$@"
command -v python3.10 >/dev/null && exec python3.10 "$0" "$@"
command -v python3.9 >/dev/null && exec python3.9 "$0" "$@"
command -v python3.8 >/dev/null && exec python3.8 "$0" "$@"
command -v python3.7 >/dev/null && exec python3.7 "$0" "$@"
command -v python3.6 >/dev/null && exec python3.6 "$0" "$@"
command -v python3 >/dev/null && exec python3 "$0" "$@"
exec python "$0" "$@"
''' "$0" "$@"
]
del _

from sys import stderr
import sys
try:
  from shutil import which
except ImportError:
  from distutils.spawn import find_executable as which

major, minor, patch = sys.version_info[:3]
print('Node.js configure: Found Python {}.{}.{}...'.format(major, minor, patch))
if major > 3 or major == 3 and minor >= 6:
  import configure
else:
  found = []
  # TODO(bnoordhuis) update when python 4 is released (ETA: never)
  for minor in range(6, 42):
      python_cmd_path = which('python3.{}'.format(minor))
      if python_cmd_path and 'pyenv/shims' not in python_cmd_path:
        found.append(python_cmd_path)
  if found:
    args = ' '.join(sys.argv[:1])
    stderr.write('No suitable python install found, use one of:\n')
    for python_cmd_path in found:
      stderr.write('\t{} {}\n'.format(python_cmd_path, args))
  else:
    stderr.write('No suitable python install found, need python >= 3.6\n')
  sys.exit(1)
