'use strict';var cov_1dfb3amx2q=function(){var path='async_hooks.js',hash='e089c3142d02d4d4eb92bb0e45a153796f9a1c96',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'async_hooks.js',statementMap:{'0':{start:{line:3,column:19},end:{line:3,column:48}},'1':{start:{line:4,column:15},end:{line:4,column:41}},'2':{start:{line:23,column:47},end:{line:23,column:57}},'3':{start:{line:29,column:38},end:{line:29,column:48}},'4':{start:{line:31,column:50},end:{line:31,column:60}},'5':{start:{line:35,column:21},end:{line:56,column:1}},'6':{start:{line:64,column:32},end:{line:64,column:52}},'7':{start:{line:69,column:53},end:{line:69,column:63}},'8':{start:{line:72,column:20},end:{line:72,column:34}},'9':{start:{line:73,column:22},end:{line:73,column:38}},'10':{start:{line:74,column:21},end:{line:74,column:36}},'11':{start:{line:75,column:23},end:{line:75,column:40}},'12':{start:{line:76,column:31},end:{line:76,column:55}},'13':{start:{line:77,column:25},end:{line:77,column:75}},'14':{start:{line:78,column:24},end:{line:78,column:72}},'15':{start:{line:79,column:26},end:{line:79,column:78}},'16':{start:{line:81,column:4},end:{line:81,column:71}},'17':{start:{line:84,column:20},end:{line:84,column:62}},'18':{start:{line:90,column:0},end:{line:94,column:69}},'19':{start:{line:98,column:2},end:{line:104,column:3}},'20':{start:{line:99,column:4},end:{line:99,column:31}},'21':{start:{line:101,column:14},end:{line:101,column:28}},'22':{start:{line:102,column:4},end:{line:102,column:43}},'23':{start:{line:103,column:4},end:{line:103,column:31}},'24':{start:{line:105,column:2},end:{line:107,column:3}},'25':{start:{line:105,column:35},end:{line:105,column:54}},'26':{start:{line:106,column:4},end:{line:106,column:20}},'27':{start:{line:108,column:2},end:{line:108,column:18}},'28':{start:{line:116,column:4},end:{line:117,column:63}},'29':{start:{line:117,column:6},end:{line:117,column:63}},'30':{start:{line:118,column:4},end:{line:119,column:65}},'31':{start:{line:119,column:6},end:{line:119,column:65}},'32':{start:{line:120,column:4},end:{line:121,column:65}},'33':{start:{line:121,column:6},end:{line:121,column:65}},'34':{start:{line:122,column:4},end:{line:123,column:65}},'35':{start:{line:123,column:6},end:{line:123,column:65}},'36':{start:{line:124,column:4},end:{line:125,column:73}},'37':{start:{line:125,column:6},end:{line:125,column:73}},'38':{start:{line:127,column:4},end:{line:127,column:29}},'39':{start:{line:128,column:4},end:{line:128,column:33}},'40':{start:{line:129,column:4},end:{line:129,column:31}},'41':{start:{line:130,column:4},end:{line:130,column:35}},'42':{start:{line:131,column:4},end:{line:131,column:50}},'43':{start:{line:139,column:39},end:{line:139,column:54}},'44':{start:{line:142,column:4},end:{line:143,column:18}},'45':{start:{line:143,column:6},end:{line:143,column:18}},'46':{start:{line:145,column:25},end:{line:145,column:45}},'47':{start:{line:146,column:4},end:{line:146,column:29}},'48':{start:{line:151,column:4},end:{line:151,column:71}},'49':{start:{line:152,column:4},end:{line:152,column:75}},'50':{start:{line:153,column:4},end:{line:153,column:73}},'51':{start:{line:154,column:4},end:{line:154,column:77}},'52':{start:{line:155,column:4},end:{line:156,column:72}},'53':{start:{line:157,column:4},end:{line:157,column:27}},'54':{start:{line:159,column:4},end:{line:160,column:26}},'55':{start:{line:160,column:6},end:{line:160,column:26}},'56':{start:{line:162,column:4},end:{line:162,column:16}},'57':{start:{line:166,column:39},end:{line:166,column:54}},'58':{start:{line:168,column:18},end:{line:168,column:43}},'59':{start:{line:169,column:4},end:{line:170,column:18}},'60':{start:{line:170,column:6},end:{line:170,column:18}},'61':{start:{line:172,column:25},end:{line:172,column:45}},'62':{start:{line:173,column:4},end:{line:173,column:29}},'63':{start:{line:175,column:4},end:{line:175,column:71}},'64':{start:{line:176,column:4},end:{line:176,column:75}},'65':{start:{line:177,column:4},end:{line:177,column:73}},'66':{start:{line:178,column:4},end:{line:178,column:77}},'67':{start:{line:179,column:4},end:{line:180,column:72}},'68':{start:{line:181,column:4},end:{line:181,column:33}},'69':{start:{line:183,column:4},end:{line:184,column:27}},'70':{start:{line:184,column:6},end:{line:184,column:27}},'71':{start:{line:186,column:4},end:{line:186,column:16}},'72':{start:{line:192,column:2},end:{line:193,column:51}},'73':{start:{line:193,column:4},end:{line:193,column:51}},'74':{start:{line:198,column:2},end:{line:199,column:23}},'75':{start:{line:199,column:4},end:{line:199,column:23}},'76':{start:{line:200,column:2},end:{line:200,column:59}},'77':{start:{line:205,column:2},end:{line:205,column:54}},'78':{start:{line:208,column:2},end:{line:208,column:31}},'79':{start:{line:209,column:2},end:{line:209,column:60}},'80':{start:{line:210,column:2},end:{line:210,column:64}},'81':{start:{line:211,column:2},end:{line:211,column:62}},'82':{start:{line:212,column:2},end:{line:212,column:66}},'83':{start:{line:213,column:2},end:{line:213,column:80}},'84':{start:{line:220,column:2},end:{line:220,column:46}},'85':{start:{line:221,column:2},end:{line:221,column:60}},'86':{start:{line:222,column:2},end:{line:222,column:64}},'87':{start:{line:223,column:2},end:{line:223,column:62}},'88':{start:{line:224,column:2},end:{line:224,column:66}},'89':{start:{line:225,column:2},end:{line:225,column:80}},'90':{start:{line:227,column:2},end:{line:227,column:32}},'91':{start:{line:228,column:2},end:{line:228,column:33}},'92':{start:{line:233,column:2},end:{line:233,column:28}},'93':{start:{line:238,column:2},end:{line:238,column:44}},'94':{start:{line:243,column:2},end:{line:243,column:42}},'95':{start:{line:251,column:4},end:{line:252,column:75}},'96':{start:{line:252,column:6},end:{line:252,column:75}},'97':{start:{line:256,column:4},end:{line:260,column:5}},'98':{start:{line:257,column:6},end:{line:259,column:50}},'99':{start:{line:262,column:4},end:{line:262,column:63}},'100':{start:{line:263,column:4},end:{line:263,column:51}},'101':{start:{line:265,column:4},end:{line:267,column:6}},'102':{start:{line:271,column:4},end:{line:271,column:75}},'103':{start:{line:272,column:4},end:{line:272,column:16}},'104':{start:{line:276,column:4},end:{line:276,column:43}},'105':{start:{line:277,column:4},end:{line:277,column:16}},'106':{start:{line:281,column:4},end:{line:281,column:45}},'107':{start:{line:282,column:4},end:{line:282,column:16}},'108':{start:{line:286,column:4},end:{line:286,column:33}},'109':{start:{line:290,column:4},end:{line:290,column:41}},'110':{start:{line:298,column:17},end:{line:298,column:35}},'111':{start:{line:299,column:2},end:{line:299,column:32}},'112':{start:{line:300,column:2},end:{line:304,column:3}},'113':{start:{line:301,column:4},end:{line:301,column:9}},'114':{start:{line:303,column:4},end:{line:303,column:25}},'115':{start:{line:314,column:2},end:{line:314,column:44}},'116':{start:{line:322,column:23},end:{line:322,column:59}},'117':{start:{line:325,column:2},end:{line:325,column:43}},'118':{start:{line:326,column:2},end:{line:327,column:56}},'119':{start:{line:327,column:4},end:{line:327,column:56}},'120':{start:{line:328,column:2},end:{line:328,column:24}},'121':{start:{line:335,column:2},end:{line:335,column:56}},'122':{start:{line:344,column:2},end:{line:345,column:11}},'123':{start:{line:345,column:4},end:{line:345,column:11}},'124':{start:{line:349,column:2},end:{line:355,column:3}},'125':{start:{line:350,column:4},end:{line:350,column:37}},'126':{start:{line:354,column:4},end:{line:354,column:45}},'127':{start:{line:357,column:2},end:{line:359,column:3}},'128':{start:{line:358,column:4},end:{line:358,column:76}},'129':{start:{line:360,column:2},end:{line:364,column:3}},'130':{start:{line:361,column:4},end:{line:363,column:48}},'131':{start:{line:365,column:2},end:{line:367,column:3}},'132':{start:{line:366,column:4},end:{line:366,column:55}},'133':{start:{line:369,column:2},end:{line:369,column:58}},'134':{start:{line:376,column:13},end:{line:399,column:3}},'135':{start:{line:377,column:4},end:{line:377,column:33}},'136':{start:{line:380,column:4},end:{line:390,column:5}},'137':{start:{line:381,column:6},end:{line:385,column:7}},'138':{start:{line:382,column:8},end:{line:384,column:9}},'139':{start:{line:383,column:10},end:{line:383,column:49}},'140':{start:{line:387,column:6},end:{line:387,column:20}},'141':{start:{line:389,column:6},end:{line:389,column:35}},'142':{start:{line:396,column:4},end:{line:398,column:5}},'143':{start:{line:397,column:6},end:{line:397,column:27}},'144':{start:{line:403,column:2},end:{line:405,column:5}},'145':{start:{line:406,column:2},end:{line:406,column:12}},'146':{start:{line:414,column:2},end:{line:417,column:3}},'147':{start:{line:415,column:4},end:{line:416,column:73}},'148':{start:{line:418,column:2},end:{line:422,column:3}},'149':{start:{line:419,column:4},end:{line:421,column:54}},'150':{start:{line:424,column:2},end:{line:424,column:40}},'151':{start:{line:426,column:2},end:{line:427,column:30}},'152':{start:{line:427,column:4},end:{line:427,column:30}},'153':{start:{line:432,column:2},end:{line:435,column:3}},'154':{start:{line:433,column:4},end:{line:434,column:73}},'155':{start:{line:437,column:2},end:{line:438,column:29}},'156':{start:{line:438,column:4},end:{line:438,column:29}},'157':{start:{line:440,column:2},end:{line:440,column:23}},'158':{start:{line:445,column:2},end:{line:448,column:3}},'159':{start:{line:446,column:4},end:{line:447,column:73}},'160':{start:{line:451,column:2},end:{line:452,column:11}},'161':{start:{line:452,column:4},end:{line:452,column:11}},'162':{start:{line:453,column:2},end:{line:453,column:42}},'163':{start:{line:461,column:2},end:{line:461,column:31}},'164':{start:{line:463,column:2},end:{line:476,column:3}},'165':{start:{line:464,column:4},end:{line:471,column:5}},'166':{start:{line:465,column:6},end:{line:470,column:7}},'167':{start:{line:466,column:8},end:{line:469,column:10}},'168':{start:{line:473,column:4},end:{line:473,column:18}},'169':{start:{line:475,column:4},end:{line:475,column:33}},'170':{start:{line:482,column:2},end:{line:484,column:3}},'171':{start:{line:483,column:4},end:{line:483,column:25}},'172':{start:{line:490,column:0},end:{line:506,column:2}}},fnMap:{'0':{name:'fatalError',decl:{start:{line:97,column:9},end:{line:97,column:19}},loc:{start:{line:97,column:23},end:{line:109,column:1}},line:97},'1':{name:'(anonymous_1)',decl:{start:{line:105,column:28},end:{line:105,column:29}},loc:{start:{line:105,column:35},end:{line:105,column:54}},line:105},'2':{name:'(anonymous_2)',decl:{start:{line:115,column:2},end:{line:115,column:3}},loc:{start:{line:115,column:64},end:{line:132,column:3}},line:115},'3':{name:'(anonymous_3)',decl:{start:{line:134,column:2},end:{line:134,column:3}},loc:{start:{line:134,column:11},end:{line:163,column:3}},line:134},'4':{name:'(anonymous_4)',decl:{start:{line:165,column:2},end:{line:165,column:3}},loc:{start:{line:165,column:12},end:{line:187,column:3}},line:165},'5':{name:'getHookArrays',decl:{start:{line:191,column:9},end:{line:191,column:22}},loc:{start:{line:191,column:25},end:{line:201,column:1}},line:191},'6':{name:'storeActiveHooks',decl:{start:{line:204,column:9},end:{line:204,column:25}},loc:{start:{line:204,column:28},end:{line:214,column:1}},line:204},'7':{name:'restoreActiveHooks',decl:{start:{line:219,column:9},end:{line:219,column:27}},loc:{start:{line:219,column:30},end:{line:229,column:1}},line:219},'8':{name:'createHook',decl:{start:{line:232,column:9},end:{line:232,column:19}},loc:{start:{line:232,column:25},end:{line:234,column:1}},line:232},'9':{name:'executionAsyncId',decl:{start:{line:237,column:9},end:{line:237,column:25}},loc:{start:{line:237,column:28},end:{line:239,column:1}},line:237},'10':{name:'triggerAsyncId',decl:{start:{line:242,column:9},end:{line:242,column:23}},loc:{start:{line:242,column:26},end:{line:244,column:1}},line:242},'11':{name:'(anonymous_11)',decl:{start:{line:250,column:2},end:{line:250,column:3}},loc:{start:{line:250,column:54},end:{line:268,column:3}},line:250},'12':{name:'(anonymous_12)',decl:{start:{line:270,column:2},end:{line:270,column:3}},loc:{start:{line:270,column:15},end:{line:273,column:3}},line:270},'13':{name:'(anonymous_13)',decl:{start:{line:275,column:2},end:{line:275,column:3}},loc:{start:{line:275,column:14},end:{line:278,column:3}},line:275},'14':{name:'(anonymous_14)',decl:{start:{line:280,column:2},end:{line:280,column:3}},loc:{start:{line:280,column:16},end:{line:283,column:3}},line:280},'15':{name:'(anonymous_15)',decl:{start:{line:285,column:2},end:{line:285,column:3}},loc:{start:{line:285,column:12},end:{line:287,column:3}},line:285},'16':{name:'(anonymous_16)',decl:{start:{line:289,column:2},end:{line:289,column:3}},loc:{start:{line:289,column:19},end:{line:291,column:3}},line:289},'17':{name:'runInAsyncIdScope',decl:{start:{line:295,column:9},end:{line:295,column:26}},loc:{start:{line:295,column:40},end:{line:305,column:1}},line:295},'18':{name:'newUid',decl:{start:{line:313,column:9},end:{line:313,column:15}},loc:{start:{line:313,column:18},end:{line:315,column:1}},line:313},'19':{name:'initTriggerId',decl:{start:{line:321,column:9},end:{line:321,column:22}},loc:{start:{line:321,column:25},end:{line:329,column:1}},line:321},'20':{name:'setInitTriggerId',decl:{start:{line:332,column:9},end:{line:332,column:25}},loc:{start:{line:332,column:42},end:{line:336,column:1}},line:332},'21':{name:'emitInitScript',decl:{start:{line:339,column:9},end:{line:339,column:23}},loc:{start:{line:339,column:65},end:{line:370,column:1}},line:339},'22':{name:'emitHookFactory',decl:{start:{line:372,column:9},end:{line:372,column:24}},loc:{start:{line:372,column:39},end:{line:407,column:1}},line:372},'23':{name:'(anonymous_23)',decl:{start:{line:376,column:13},end:{line:376,column:14}},loc:{start:{line:376,column:31},end:{line:399,column:3}},line:376},'24':{name:'emitBeforeScript',decl:{start:{line:410,column:9},end:{line:410,column:25}},loc:{start:{line:410,column:51},end:{line:428,column:1}},line:410},'25':{name:'emitAfterScript',decl:{start:{line:431,column:9},end:{line:431,column:24}},loc:{start:{line:431,column:34},end:{line:441,column:1}},line:431},'26':{name:'emitDestroyScript',decl:{start:{line:444,column:9},end:{line:444,column:26}},loc:{start:{line:444,column:36},end:{line:454,column:1}},line:444},'27':{name:'emitInitNative',decl:{start:{line:460,column:9},end:{line:460,column:23}},loc:{start:{line:460,column:65},end:{line:485,column:1}},line:460}},branchMap:{'0':{loc:{start:{line:98,column:2},end:{line:104,column:3}},type:'if',locations:[{start:{line:98,column:2},end:{line:104,column:3}},{start:{line:98,column:2},end:{line:104,column:3}}],line:98},'1':{loc:{start:{line:105,column:2},end:{line:107,column:3}},type:'if',locations:[{start:{line:105,column:2},end:{line:107,column:3}},{start:{line:105,column:2},end:{line:107,column:3}}],line:105},'2':{loc:{start:{line:116,column:4},end:{line:117,column:63}},type:'if',locations:[{start:{line:116,column:4},end:{line:117,column:63}},{start:{line:116,column:4},end:{line:117,column:63}}],line:116},'3':{loc:{start:{line:116,column:8},end:{line:116,column:56}},type:'binary-expr',locations:[{start:{line:116,column:8},end:{line:116,column:26}},{start:{line:116,column:30},end:{line:116,column:56}}],line:116},'4':{loc:{start:{line:118,column:4},end:{line:119,column:65}},type:'if',locations:[{start:{line:118,column:4},end:{line:119,column:65}},{start:{line:118,column:4},end:{line:119,column:65}}],line:118},'5':{loc:{start:{line:118,column:8},end:{line:118,column:60}},type:'binary-expr',locations:[{start:{line:118,column:8},end:{line:118,column:28}},{start:{line:118,column:32},end:{line:118,column:60}}],line:118},'6':{loc:{start:{line:120,column:4},end:{line:121,column:65}},type:'if',locations:[{start:{line:120,column:4},end:{line:121,column:65}},{start:{line:120,column:4},end:{line:121,column:65}}],line:120},'7':{loc:{start:{line:120,column:8},end:{line:120,column:58}},type:'binary-expr',locations:[{start:{line:120,column:8},end:{line:120,column:27}},{start:{line:120,column:31},end:{line:120,column:58}}],line:120},'8':{loc:{start:{line:122,column:4},end:{line:123,column:65}},type:'if',locations:[{start:{line:122,column:4},end:{line:123,column:65}},{start:{line:122,column:4},end:{line:123,column:65}}],line:122},'9':{loc:{start:{line:122,column:8},end:{line:122,column:62}},type:'binary-expr',locations:[{start:{line:122,column:8},end:{line:122,column:29}},{start:{line:122,column:33},end:{line:122,column:62}}],line:122},'10':{loc:{start:{line:124,column:4},end:{line:125,column:73}},type:'if',locations:[{start:{line:124,column:4},end:{line:125,column:73}},{start:{line:124,column:4},end:{line:125,column:73}}],line:124},'11':{loc:{start:{line:124,column:8},end:{line:124,column:76}},type:'binary-expr',locations:[{start:{line:124,column:8},end:{line:124,column:36}},{start:{line:124,column:40},end:{line:124,column:76}}],line:124},'12':{loc:{start:{line:142,column:4},end:{line:143,column:18}},type:'if',locations:[{start:{line:142,column:4},end:{line:143,column:18}},{start:{line:142,column:4},end:{line:143,column:18}}],line:142},'13':{loc:{start:{line:159,column:4},end:{line:160,column:26}},type:'if',locations:[{start:{line:159,column:4},end:{line:160,column:26}},{start:{line:159,column:4},end:{line:160,column:26}}],line:159},'14':{loc:{start:{line:159,column:8},end:{line:159,column:54}},type:'binary-expr',locations:[{start:{line:159,column:8},end:{line:159,column:26}},{start:{line:159,column:30},end:{line:159,column:54}}],line:159},'15':{loc:{start:{line:169,column:4},end:{line:170,column:18}},type:'if',locations:[{start:{line:169,column:4},end:{line:170,column:18}},{start:{line:169,column:4},end:{line:170,column:18}}],line:169},'16':{loc:{start:{line:183,column:4},end:{line:184,column:27}},type:'if',locations:[{start:{line:183,column:4},end:{line:184,column:27}},{start:{line:183,column:4},end:{line:184,column:27}}],line:183},'17':{loc:{start:{line:183,column:8},end:{line:183,column:54}},type:'binary-expr',locations:[{start:{line:183,column:8},end:{line:183,column:24}},{start:{line:183,column:28},end:{line:183,column:54}}],line:183},'18':{loc:{start:{line:192,column:2},end:{line:193,column:51}},type:'if',locations:[{start:{line:192,column:2},end:{line:193,column:51}},{start:{line:192,column:2},end:{line:193,column:51}}],line:192},'19':{loc:{start:{line:198,column:2},end:{line:199,column:23}},type:'if',locations:[{start:{line:198,column:2},end:{line:199,column:23}},{start:{line:198,column:2},end:{line:199,column:23}}],line:198},'20':{loc:{start:{line:250,column:20},end:{line:250,column:52}},type:'default-arg',locations:[{start:{line:250,column:37},end:{line:250,column:52}}],line:250},'21':{loc:{start:{line:251,column:4},end:{line:252,column:75}},type:'if',locations:[{start:{line:251,column:4},end:{line:252,column:75}},{start:{line:251,column:4},end:{line:252,column:75}}],line:251},'22':{loc:{start:{line:256,column:4},end:{line:260,column:5}},type:'if',locations:[{start:{line:256,column:4},end:{line:260,column:5}},{start:{line:256,column:4},end:{line:260,column:5}}],line:256},'23':{loc:{start:{line:256,column:8},end:{line:256,column:68}},type:'binary-expr',locations:[{start:{line:256,column:8},end:{line:256,column:45}},{start:{line:256,column:49},end:{line:256,column:68}}],line:256},'24':{loc:{start:{line:326,column:2},end:{line:327,column:56}},type:'if',locations:[{start:{line:326,column:2},end:{line:327,column:56}},{start:{line:326,column:2},end:{line:327,column:56}}],line:326},'25':{loc:{start:{line:344,column:2},end:{line:345,column:11}},type:'if',locations:[{start:{line:344,column:2},end:{line:345,column:11}},{start:{line:344,column:2},end:{line:345,column:11}}],line:344},'26':{loc:{start:{line:349,column:2},end:{line:355,column:3}},type:'if',locations:[{start:{line:349,column:2},end:{line:355,column:3}},{start:{line:349,column:2},end:{line:355,column:3}}],line:349},'27':{loc:{start:{line:357,column:2},end:{line:359,column:3}},type:'if',locations:[{start:{line:357,column:2},end:{line:359,column:3}},{start:{line:357,column:2},end:{line:359,column:3}}],line:357},'28':{loc:{start:{line:357,column:6},end:{line:357,column:52}},type:'binary-expr',locations:[{start:{line:357,column:6},end:{line:357,column:36}},{start:{line:357,column:40},end:{line:357,column:52}}],line:357},'29':{loc:{start:{line:360,column:2},end:{line:364,column:3}},type:'if',locations:[{start:{line:360,column:2},end:{line:364,column:3}},{start:{line:360,column:2},end:{line:364,column:3}}],line:360},'30':{loc:{start:{line:360,column:6},end:{line:360,column:66}},type:'binary-expr',locations:[{start:{line:360,column:6},end:{line:360,column:43}},{start:{line:360,column:47},end:{line:360,column:66}}],line:360},'31':{loc:{start:{line:365,column:2},end:{line:367,column:3}},type:'if',locations:[{start:{line:365,column:2},end:{line:367,column:3}},{start:{line:365,column:2},end:{line:367,column:3}}],line:365},'32':{loc:{start:{line:365,column:6},end:{line:365,column:50}},type:'binary-expr',locations:[{start:{line:365,column:6},end:{line:365,column:30}},{start:{line:365,column:34},end:{line:365,column:50}}],line:365},'33':{loc:{start:{line:382,column:8},end:{line:384,column:9}},type:'if',locations:[{start:{line:382,column:8},end:{line:384,column:9}},{start:{line:382,column:8},end:{line:384,column:9}}],line:382},'34':{loc:{start:{line:396,column:4},end:{line:398,column:5}},type:'if',locations:[{start:{line:396,column:4},end:{line:398,column:5}},{start:{line:396,column:4},end:{line:398,column:5}}],line:396},'35':{loc:{start:{line:396,column:8},end:{line:396,column:72}},type:'binary-expr',locations:[{start:{line:396,column:8},end:{line:396,column:37}},{start:{line:396,column:41},end:{line:396,column:72}}],line:396},'36':{loc:{start:{line:414,column:2},end:{line:417,column:3}},type:'if',locations:[{start:{line:414,column:2},end:{line:417,column:3}},{start:{line:414,column:2},end:{line:417,column:3}}],line:414},'37':{loc:{start:{line:414,column:6},end:{line:414,column:52}},type:'binary-expr',locations:[{start:{line:414,column:6},end:{line:414,column:36}},{start:{line:414,column:40},end:{line:414,column:52}}],line:414},'38':{loc:{start:{line:418,column:2},end:{line:422,column:3}},type:'if',locations:[{start:{line:418,column:2},end:{line:422,column:3}},{start:{line:418,column:2},end:{line:422,column:3}}],line:418},'39':{loc:{start:{line:418,column:6},end:{line:418,column:66}},type:'binary-expr',locations:[{start:{line:418,column:6},end:{line:418,column:43}},{start:{line:418,column:47},end:{line:418,column:66}}],line:418},'40':{loc:{start:{line:426,column:2},end:{line:427,column:30}},type:'if',locations:[{start:{line:426,column:2},end:{line:427,column:30}},{start:{line:426,column:2},end:{line:427,column:30}}],line:426},'41':{loc:{start:{line:432,column:2},end:{line:435,column:3}},type:'if',locations:[{start:{line:432,column:2},end:{line:435,column:3}},{start:{line:432,column:2},end:{line:435,column:3}}],line:432},'42':{loc:{start:{line:432,column:6},end:{line:432,column:52}},type:'binary-expr',locations:[{start:{line:432,column:6},end:{line:432,column:36}},{start:{line:432,column:40},end:{line:432,column:52}}],line:432},'43':{loc:{start:{line:437,column:2},end:{line:438,column:29}},type:'if',locations:[{start:{line:437,column:2},end:{line:438,column:29}},{start:{line:437,column:2},end:{line:438,column:29}}],line:437},'44':{loc:{start:{line:445,column:2},end:{line:448,column:3}},type:'if',locations:[{start:{line:445,column:2},end:{line:448,column:3}},{start:{line:445,column:2},end:{line:448,column:3}}],line:445},'45':{loc:{start:{line:445,column:6},end:{line:445,column:52}},type:'binary-expr',locations:[{start:{line:445,column:6},end:{line:445,column:36}},{start:{line:445,column:40},end:{line:445,column:52}}],line:445},'46':{loc:{start:{line:451,column:2},end:{line:452,column:11}},type:'if',locations:[{start:{line:451,column:2},end:{line:452,column:11}},{start:{line:451,column:2},end:{line:452,column:11}}],line:451},'47':{loc:{start:{line:451,column:6},end:{line:451,column:55}},type:'binary-expr',locations:[{start:{line:451,column:6},end:{line:451,column:39}},{start:{line:451,column:43},end:{line:451,column:55}}],line:451},'48':{loc:{start:{line:465,column:6},end:{line:470,column:7}},type:'if',locations:[{start:{line:465,column:6},end:{line:470,column:7}},{start:{line:465,column:6},end:{line:470,column:7}}],line:465},'49':{loc:{start:{line:482,column:2},end:{line:484,column:3}},type:'if',locations:[{start:{line:482,column:2},end:{line:484,column:3}},{start:{line:482,column:2},end:{line:484,column:3}}],line:482},'50':{loc:{start:{line:482,column:6},end:{line:482,column:70}},type:'binary-expr',locations:[{start:{line:482,column:6},end:{line:482,column:35}},{start:{line:482,column:39},end:{line:482,column:70}}],line:482}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0,'82':0,'83':0,'84':0,'85':0,'86':0,'87':0,'88':0,'89':0,'90':0,'91':0,'92':0,'93':0,'94':0,'95':0,'96':0,'97':0,'98':0,'99':0,'100':0,'101':0,'102':0,'103':0,'104':0,'105':0,'106':0,'107':0,'108':0,'109':0,'110':0,'111':0,'112':0,'113':0,'114':0,'115':0,'116':0,'117':0,'118':0,'119':0,'120':0,'121':0,'122':0,'123':0,'124':0,'125':0,'126':0,'127':0,'128':0,'129':0,'130':0,'131':0,'132':0,'133':0,'134':0,'135':0,'136':0,'137':0,'138':0,'139':0,'140':0,'141':0,'142':0,'143':0,'144':0,'145':0,'146':0,'147':0,'148':0,'149':0,'150':0,'151':0,'152':0,'153':0,'154':0,'155':0,'156':0,'157':0,'158':0,'159':0,'160':0,'161':0,'162':0,'163':0,'164':0,'165':0,'166':0,'167':0,'168':0,'169':0,'170':0,'171':0,'172':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0],'14':[0,0],'15':[0,0],'16':[0,0],'17':[0,0],'18':[0,0],'19':[0,0],'20':[0],'21':[0,0],'22':[0,0],'23':[0,0],'24':[0,0],'25':[0,0],'26':[0,0],'27':[0,0],'28':[0,0],'29':[0,0],'30':[0,0],'31':[0,0],'32':[0,0],'33':[0,0],'34':[0,0],'35':[0,0],'36':[0,0],'37':[0,0],'38':[0,0],'39':[0,0],'40':[0,0],'41':[0,0],'42':[0,0],'43':[0,0],'44':[0,0],'45':[0,0],'46':[0,0],'47':[0,0],'48':[0,0],'49':[0,0],'50':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const async_wrap=(cov_1dfb3amx2q.s[0]++,process.binding('async_wrap'));const errors=(cov_1dfb3amx2q.s[1]++,require('internal/errors'));/* async_hook_fields is a Uint32Array wrapping the uint32_t array of
 * Environment::AsyncHooks::fields_[]. Each index tracks the number of active
 * hooks for each type.
 *
 * async_id_fields is a Float64Array wrapping the double array of
 * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for
 * the various asynchronous states of the application. These are:
 *  kExecutionAsyncId: The async_id assigned to the resource responsible for the
 *    current execution stack.
 *  kTriggerAsyncId: The trigger_async_id of the resource responsible for
 *    the current execution stack.
 *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.
 *  kInitTriggerAsyncId: Written immediately before a resource's constructor
 *    that sets the value of the init()'s triggerAsyncId. The order of
 *    retrieving the triggerAsyncId value is passing directly to the
 *    constructor -> value set in kInitTriggerAsyncId -> executionAsyncId of
 *    the current resource.
 */const{async_hook_fields,async_id_fields}=(cov_1dfb3amx2q.s[2]++,async_wrap);// Store the pair executionAsyncId and triggerAsyncId in a std::stack on
// Environment::AsyncHooks::ids_stack_ tracks the resource responsible for the
// current execution stack. This is unwound as each resource exits. In the case
// of a fatal exception this stack is emptied after calling each hook's after()
// callback.
const{pushAsyncIds,popAsyncIds}=(cov_1dfb3amx2q.s[3]++,async_wrap);// For performance reasons, only track Proimses when a hook is enabled.
const{enablePromiseHook,disablePromiseHook}=(cov_1dfb3amx2q.s[4]++,async_wrap);// Properties in active_hooks are used to keep track of the set of hooks being
// executed in case another hook is enabled/disabled. The new set of hooks is
// then restored once the active set of hooks is finished executing.
const active_hooks=(cov_1dfb3amx2q.s[5]++,{// Array of all AsyncHooks that will be iterated whenever an async event
// fires. Using var instead of (preferably const) in order to assign
// active_hooks.tmp_array if a hook is enabled/disabled during hook
// execution.
array:[],// Use a counter to track nested calls of async hook callbacks and make sure
// the active_hooks.array isn't altered mid execution.
call_depth:0,// Use to temporarily store and updated active_hooks.array if the user
// enables or disables a hook while hooks are being processed. If a hook is
// enabled() or disabled() during hook execution then the current set of
// active hooks is duplicated and set equal to active_hooks.tmp_array. Any
// subsequent changes are on the duplicated array. When all hooks have
// completed executing active_hooks.tmp_array is assigned to
// active_hooks.array.
tmp_array:null,// Keep track of the field counts held in active_hooks.tmp_array. Because the
// async_hook_fields can't be reassigned, store each uint32 in an array that
// is written back to async_hook_fields when active_hooks.array is restored.
tmp_fields:null});// Each constant tracks how many callbacks there are for any given step of
// async execution. These are tracked so if the user didn't include callbacks
// for a given step, that step can bail out early.
const{kInit,kBefore,kAfter,kDestroy,kTotals,kPromiseResolve,kExecutionAsyncId,kTriggerAsyncId,kAsyncIdCounter,kInitTriggerAsyncId}=(cov_1dfb3amx2q.s[6]++,async_wrap.constants);// Symbols used to store the respective ids on both AsyncResource instances and
// internal resources. They will also be assigned to arbitrary objects passed
// in by the user that take place of internally constructed objects.
const{async_id_symbol,trigger_async_id_symbol}=(cov_1dfb3amx2q.s[7]++,async_wrap);// Used in AsyncHook and AsyncResource.
const init_symbol=(cov_1dfb3amx2q.s[8]++,Symbol('init'));const before_symbol=(cov_1dfb3amx2q.s[9]++,Symbol('before'));const after_symbol=(cov_1dfb3amx2q.s[10]++,Symbol('after'));const destroy_symbol=(cov_1dfb3amx2q.s[11]++,Symbol('destroy'));const promise_resolve_symbol=(cov_1dfb3amx2q.s[12]++,Symbol('promiseResolve'));const emitBeforeNative=(cov_1dfb3amx2q.s[13]++,emitHookFactory(before_symbol,'emitBeforeNative'));const emitAfterNative=(cov_1dfb3amx2q.s[14]++,emitHookFactory(after_symbol,'emitAfterNative'));const emitDestroyNative=(cov_1dfb3amx2q.s[15]++,emitHookFactory(destroy_symbol,'emitDestroyNative'));const emitPromiseResolveNative=(cov_1dfb3amx2q.s[16]++,emitHookFactory(promise_resolve_symbol,'emitPromiseResolveNative'));// TODO(refack): move to node-config.cc
const abort_regex=(cov_1dfb3amx2q.s[17]++,/^--abort[_-]on[_-]uncaught[_-]exception$/);// Setup the callbacks that node::AsyncWrap will call when there are hooks to
// process. They use the same functions as the JS embedder API. These callbacks
// are setup immediately to prevent async_wrap.setupHooks() from being hijacked
// and the cost of doing so is negligible.
cov_1dfb3amx2q.s[18]++;async_wrap.setupHooks({init:emitInitNative,before:emitBeforeNative,after:emitAfterNative,destroy:emitDestroyNative,promise_resolve:emitPromiseResolveNative});// Used to fatally abort the process if a callback throws.
function fatalError(e){cov_1dfb3amx2q.f[0]++;cov_1dfb3amx2q.s[19]++;if(typeof e.stack==='string'){cov_1dfb3amx2q.b[0][0]++;cov_1dfb3amx2q.s[20]++;process._rawDebug(e.stack);}else{cov_1dfb3amx2q.b[0][1]++;const o=(cov_1dfb3amx2q.s[21]++,{message:e});cov_1dfb3amx2q.s[22]++;Error.captureStackTrace(o,fatalError);cov_1dfb3amx2q.s[23]++;process._rawDebug(o.stack);}cov_1dfb3amx2q.s[24]++;if(process.execArgv.some(e=>{cov_1dfb3amx2q.f[1]++;cov_1dfb3amx2q.s[25]++;return abort_regex.test(e);})){cov_1dfb3amx2q.b[1][0]++;cov_1dfb3amx2q.s[26]++;process.abort();}else{cov_1dfb3amx2q.b[1][1]++;}cov_1dfb3amx2q.s[27]++;process.exit(1);}// Public API //
class AsyncHook{constructor({init,before,after,destroy,promiseResolve}){cov_1dfb3amx2q.f[2]++;cov_1dfb3amx2q.s[28]++;if((cov_1dfb3amx2q.b[3][0]++,init!==undefined)&&(cov_1dfb3amx2q.b[3][1]++,typeof init!=='function')){cov_1dfb3amx2q.b[2][0]++;cov_1dfb3amx2q.s[29]++;throw new errors.TypeError('ERR_ASYNC_CALLBACK','init');}else{cov_1dfb3amx2q.b[2][1]++;}cov_1dfb3amx2q.s[30]++;if((cov_1dfb3amx2q.b[5][0]++,before!==undefined)&&(cov_1dfb3amx2q.b[5][1]++,typeof before!=='function')){cov_1dfb3amx2q.b[4][0]++;cov_1dfb3amx2q.s[31]++;throw new errors.TypeError('ERR_ASYNC_CALLBACK','before');}else{cov_1dfb3amx2q.b[4][1]++;}cov_1dfb3amx2q.s[32]++;if((cov_1dfb3amx2q.b[7][0]++,after!==undefined)&&(cov_1dfb3amx2q.b[7][1]++,typeof after!=='function')){cov_1dfb3amx2q.b[6][0]++;cov_1dfb3amx2q.s[33]++;throw new errors.TypeError('ERR_ASYNC_CALLBACK','before');}else{cov_1dfb3amx2q.b[6][1]++;}cov_1dfb3amx2q.s[34]++;if((cov_1dfb3amx2q.b[9][0]++,destroy!==undefined)&&(cov_1dfb3amx2q.b[9][1]++,typeof destroy!=='function')){cov_1dfb3amx2q.b[8][0]++;cov_1dfb3amx2q.s[35]++;throw new errors.TypeError('ERR_ASYNC_CALLBACK','before');}else{cov_1dfb3amx2q.b[8][1]++;}cov_1dfb3amx2q.s[36]++;if((cov_1dfb3amx2q.b[11][0]++,promiseResolve!==undefined)&&(cov_1dfb3amx2q.b[11][1]++,typeof promiseResolve!=='function')){cov_1dfb3amx2q.b[10][0]++;cov_1dfb3amx2q.s[37]++;throw new errors.TypeError('ERR_ASYNC_CALLBACK','promiseResolve');}else{cov_1dfb3amx2q.b[10][1]++;}cov_1dfb3amx2q.s[38]++;this[init_symbol]=init;cov_1dfb3amx2q.s[39]++;this[before_symbol]=before;cov_1dfb3amx2q.s[40]++;this[after_symbol]=after;cov_1dfb3amx2q.s[41]++;this[destroy_symbol]=destroy;cov_1dfb3amx2q.s[42]++;this[promise_resolve_symbol]=promiseResolve;}enable(){cov_1dfb3amx2q.f[3]++;// The set of callbacks for a hook should be the same regardless of whether
// enable()/disable() are run during their execution. The following
// references are reassigned to the tmp arrays if a hook is currently being
const[hooks_array,hook_fields]=(cov_1dfb3amx2q.s[43]++,getHookArrays());// Each hook is only allowed to be added once.
cov_1dfb3amx2q.s[44]++;if(hooks_array.includes(this)){cov_1dfb3amx2q.b[12][0]++;cov_1dfb3amx2q.s[45]++;return this;}else{cov_1dfb3amx2q.b[12][1]++;}const prev_kTotals=(cov_1dfb3amx2q.s[46]++,hook_fields[kTotals]);cov_1dfb3amx2q.s[47]++;hook_fields[kTotals]=0;// createHook() has already enforced that the callbacks are all functions,
// so here simply increment the count of whether each callbacks exists or
// not.
cov_1dfb3amx2q.s[48]++;hook_fields[kTotals]+=hook_fields[kInit]+=+!!this[init_symbol];cov_1dfb3amx2q.s[49]++;hook_fields[kTotals]+=hook_fields[kBefore]+=+!!this[before_symbol];cov_1dfb3amx2q.s[50]++;hook_fields[kTotals]+=hook_fields[kAfter]+=+!!this[after_symbol];cov_1dfb3amx2q.s[51]++;hook_fields[kTotals]+=hook_fields[kDestroy]+=+!!this[destroy_symbol];cov_1dfb3amx2q.s[52]++;hook_fields[kTotals]+=hook_fields[kPromiseResolve]+=+!!this[promise_resolve_symbol];cov_1dfb3amx2q.s[53]++;hooks_array.push(this);cov_1dfb3amx2q.s[54]++;if((cov_1dfb3amx2q.b[14][0]++,prev_kTotals===0)&&(cov_1dfb3amx2q.b[14][1]++,hook_fields[kTotals]>0)){cov_1dfb3amx2q.b[13][0]++;cov_1dfb3amx2q.s[55]++;enablePromiseHook();}else{cov_1dfb3amx2q.b[13][1]++;}cov_1dfb3amx2q.s[56]++;return this;}disable(){cov_1dfb3amx2q.f[4]++;const[hooks_array,hook_fields]=(cov_1dfb3amx2q.s[57]++,getHookArrays());const index=(cov_1dfb3amx2q.s[58]++,hooks_array.indexOf(this));cov_1dfb3amx2q.s[59]++;if(index===-1){cov_1dfb3amx2q.b[15][0]++;cov_1dfb3amx2q.s[60]++;return this;}else{cov_1dfb3amx2q.b[15][1]++;}const prev_kTotals=(cov_1dfb3amx2q.s[61]++,hook_fields[kTotals]);cov_1dfb3amx2q.s[62]++;hook_fields[kTotals]=0;cov_1dfb3amx2q.s[63]++;hook_fields[kTotals]+=hook_fields[kInit]-=+!!this[init_symbol];cov_1dfb3amx2q.s[64]++;hook_fields[kTotals]+=hook_fields[kBefore]-=+!!this[before_symbol];cov_1dfb3amx2q.s[65]++;hook_fields[kTotals]+=hook_fields[kAfter]-=+!!this[after_symbol];cov_1dfb3amx2q.s[66]++;hook_fields[kTotals]+=hook_fields[kDestroy]-=+!!this[destroy_symbol];cov_1dfb3amx2q.s[67]++;hook_fields[kTotals]+=hook_fields[kPromiseResolve]-=+!!this[promise_resolve_symbol];cov_1dfb3amx2q.s[68]++;hooks_array.splice(index,1);cov_1dfb3amx2q.s[69]++;if((cov_1dfb3amx2q.b[17][0]++,prev_kTotals>0)&&(cov_1dfb3amx2q.b[17][1]++,hook_fields[kTotals]===0)){cov_1dfb3amx2q.b[16][0]++;cov_1dfb3amx2q.s[70]++;disablePromiseHook();}else{cov_1dfb3amx2q.b[16][1]++;}cov_1dfb3amx2q.s[71]++;return this;}}function getHookArrays(){cov_1dfb3amx2q.f[5]++;cov_1dfb3amx2q.s[72]++;if(active_hooks.call_depth===0){cov_1dfb3amx2q.b[18][0]++;cov_1dfb3amx2q.s[73]++;return[active_hooks.array,async_hook_fields];}else{cov_1dfb3amx2q.b[18][1]++;}// If this hook is being enabled while in the middle of processing the array
// of currently active hooks then duplicate the current set of active hooks
// and store this there. This shouldn't fire until the next time hooks are
// processed.
cov_1dfb3amx2q.s[74]++;if(active_hooks.tmp_array===null){cov_1dfb3amx2q.b[19][0]++;cov_1dfb3amx2q.s[75]++;storeActiveHooks();}else{cov_1dfb3amx2q.b[19][1]++;}cov_1dfb3amx2q.s[76]++;return[active_hooks.tmp_array,active_hooks.tmp_fields];}function storeActiveHooks(){cov_1dfb3amx2q.f[6]++;cov_1dfb3amx2q.s[77]++;active_hooks.tmp_array=active_hooks.array.slice();// Don't want to make the assumption that kInit to kDestroy are indexes 0 to
// 4. So do this the long way.
cov_1dfb3amx2q.s[78]++;active_hooks.tmp_fields=[];cov_1dfb3amx2q.s[79]++;active_hooks.tmp_fields[kInit]=async_hook_fields[kInit];cov_1dfb3amx2q.s[80]++;active_hooks.tmp_fields[kBefore]=async_hook_fields[kBefore];cov_1dfb3amx2q.s[81]++;active_hooks.tmp_fields[kAfter]=async_hook_fields[kAfter];cov_1dfb3amx2q.s[82]++;active_hooks.tmp_fields[kDestroy]=async_hook_fields[kDestroy];cov_1dfb3amx2q.s[83]++;active_hooks.tmp_fields[kPromiseResolve]=async_hook_fields[kPromiseResolve];}// Then restore the correct hooks array in case any hooks were added/removed
// during hook callback execution.
function restoreActiveHooks(){cov_1dfb3amx2q.f[7]++;cov_1dfb3amx2q.s[84]++;active_hooks.array=active_hooks.tmp_array;cov_1dfb3amx2q.s[85]++;async_hook_fields[kInit]=active_hooks.tmp_fields[kInit];cov_1dfb3amx2q.s[86]++;async_hook_fields[kBefore]=active_hooks.tmp_fields[kBefore];cov_1dfb3amx2q.s[87]++;async_hook_fields[kAfter]=active_hooks.tmp_fields[kAfter];cov_1dfb3amx2q.s[88]++;async_hook_fields[kDestroy]=active_hooks.tmp_fields[kDestroy];cov_1dfb3amx2q.s[89]++;async_hook_fields[kPromiseResolve]=active_hooks.tmp_fields[kPromiseResolve];cov_1dfb3amx2q.s[90]++;active_hooks.tmp_array=null;cov_1dfb3amx2q.s[91]++;active_hooks.tmp_fields=null;}function createHook(fns){cov_1dfb3amx2q.f[8]++;cov_1dfb3amx2q.s[92]++;return new AsyncHook(fns);}function executionAsyncId(){cov_1dfb3amx2q.f[9]++;cov_1dfb3amx2q.s[93]++;return async_id_fields[kExecutionAsyncId];}function triggerAsyncId(){cov_1dfb3amx2q.f[10]++;cov_1dfb3amx2q.s[94]++;return async_id_fields[kTriggerAsyncId];}// Embedder API //
class AsyncResource{constructor(type,triggerAsyncId=(cov_1dfb3amx2q.b[20][0]++,initTriggerId())){cov_1dfb3amx2q.f[11]++;cov_1dfb3amx2q.s[95]++;if(typeof type!=='string'){cov_1dfb3amx2q.b[21][0]++;cov_1dfb3amx2q.s[96]++;throw new errors.TypeError('ERR_INVALID_ARG_TYPE','type','string');}else{cov_1dfb3amx2q.b[21][1]++;}// Unlike emitInitScript, AsyncResource doesn't supports null as the
// triggerAsyncId.
cov_1dfb3amx2q.s[97]++;if((cov_1dfb3amx2q.b[23][0]++,!Number.isSafeInteger(triggerAsyncId))||(cov_1dfb3amx2q.b[23][1]++,triggerAsyncId<-1)){cov_1dfb3amx2q.b[22][0]++;cov_1dfb3amx2q.s[98]++;throw new errors.RangeError('ERR_INVALID_ASYNC_ID','triggerAsyncId',triggerAsyncId);}else{cov_1dfb3amx2q.b[22][1]++;}cov_1dfb3amx2q.s[99]++;this[async_id_symbol]=++async_id_fields[kAsyncIdCounter];cov_1dfb3amx2q.s[100]++;this[trigger_async_id_symbol]=triggerAsyncId;cov_1dfb3amx2q.s[101]++;emitInitScript(this[async_id_symbol],type,this[trigger_async_id_symbol],this);}emitBefore(){cov_1dfb3amx2q.f[12]++;cov_1dfb3amx2q.s[102]++;emitBeforeScript(this[async_id_symbol],this[trigger_async_id_symbol]);cov_1dfb3amx2q.s[103]++;return this;}emitAfter(){cov_1dfb3amx2q.f[13]++;cov_1dfb3amx2q.s[104]++;emitAfterScript(this[async_id_symbol]);cov_1dfb3amx2q.s[105]++;return this;}emitDestroy(){cov_1dfb3amx2q.f[14]++;cov_1dfb3amx2q.s[106]++;emitDestroyScript(this[async_id_symbol]);cov_1dfb3amx2q.s[107]++;return this;}asyncId(){cov_1dfb3amx2q.f[15]++;cov_1dfb3amx2q.s[108]++;return this[async_id_symbol];}triggerAsyncId(){cov_1dfb3amx2q.f[16]++;cov_1dfb3amx2q.s[109]++;return this[trigger_async_id_symbol];}}function runInAsyncIdScope(asyncId,cb){cov_1dfb3amx2q.f[17]++;// Store the async id now to make sure the stack is still good when the ids
// are popped off the stack.
const prevId=(cov_1dfb3amx2q.s[110]++,executionAsyncId());cov_1dfb3amx2q.s[111]++;pushAsyncIds(asyncId,prevId);cov_1dfb3amx2q.s[112]++;try{cov_1dfb3amx2q.s[113]++;cb();}finally{cov_1dfb3amx2q.s[114]++;popAsyncIds(asyncId);}}// Sensitive Embedder API //
// Increment the internal id counter and return the value. Important that the
// counter increment first. Since it's done the same way in
// Environment::new_async_uid()
function newUid(){cov_1dfb3amx2q.f[18]++;cov_1dfb3amx2q.s[115]++;return++async_id_fields[kAsyncIdCounter];}// Return the triggerAsyncId meant for the constructor calling it. It's up to
// the user to safeguard this call and make sure it's zero'd out when the
// constructor is complete.
function initTriggerId(){cov_1dfb3amx2q.f[19]++;var triggerAsyncId=(cov_1dfb3amx2q.s[116]++,async_id_fields[kInitTriggerAsyncId]);// Reset value after it's been called so the next constructor doesn't
// inherit it by accident.
cov_1dfb3amx2q.s[117]++;async_id_fields[kInitTriggerAsyncId]=0;cov_1dfb3amx2q.s[118]++;if(triggerAsyncId<=0){cov_1dfb3amx2q.b[24][0]++;cov_1dfb3amx2q.s[119]++;triggerAsyncId=async_id_fields[kExecutionAsyncId];}else{cov_1dfb3amx2q.b[24][1]++;}cov_1dfb3amx2q.s[120]++;return triggerAsyncId;}function setInitTriggerId(triggerAsyncId){cov_1dfb3amx2q.f[20]++;cov_1dfb3amx2q.s[121]++;// CHECK(Number.isSafeInteger(triggerAsyncId))
// CHECK(triggerAsyncId > 0)
async_id_fields[kInitTriggerAsyncId]=triggerAsyncId;}function emitInitScript(asyncId,type,triggerAsyncId,resource){cov_1dfb3amx2q.f[21]++;cov_1dfb3amx2q.s[122]++;// Short circuit all checks for the common case. Which is that no hooks have
// been set. Do this to remove performance impact for embedders (and core).
// Even though it bypasses all the argument checks. The performance savings
// here is critical.
if(async_hook_fields[kInit]===0){cov_1dfb3amx2q.b[25][0]++;cov_1dfb3amx2q.s[123]++;return;}else{cov_1dfb3amx2q.b[25][1]++;}// This can run after the early return check b/c running this function
// manually means that the embedder must have used initTriggerId().
cov_1dfb3amx2q.s[124]++;if(triggerAsyncId===null){cov_1dfb3amx2q.b[26][0]++;cov_1dfb3amx2q.s[125]++;triggerAsyncId=initTriggerId();}else{cov_1dfb3amx2q.b[26][1]++;cov_1dfb3amx2q.s[126]++;// If a triggerAsyncId was passed, any kInitTriggerAsyncId still must be
// null'd.
async_id_fields[kInitTriggerAsyncId]=0;}cov_1dfb3amx2q.s[127]++;if((cov_1dfb3amx2q.b[28][0]++,!Number.isSafeInteger(asyncId))||(cov_1dfb3amx2q.b[28][1]++,asyncId<-1)){cov_1dfb3amx2q.b[27][0]++;cov_1dfb3amx2q.s[128]++;throw new errors.RangeError('ERR_INVALID_ASYNC_ID','asyncId',asyncId);}else{cov_1dfb3amx2q.b[27][1]++;}cov_1dfb3amx2q.s[129]++;if((cov_1dfb3amx2q.b[30][0]++,!Number.isSafeInteger(triggerAsyncId))||(cov_1dfb3amx2q.b[30][1]++,triggerAsyncId<-1)){cov_1dfb3amx2q.b[29][0]++;cov_1dfb3amx2q.s[130]++;throw new errors.RangeError('ERR_INVALID_ASYNC_ID','triggerAsyncId',triggerAsyncId);}else{cov_1dfb3amx2q.b[29][1]++;}cov_1dfb3amx2q.s[131]++;if((cov_1dfb3amx2q.b[32][0]++,typeof type!=='string')||(cov_1dfb3amx2q.b[32][1]++,type.length<=0)){cov_1dfb3amx2q.b[31][0]++;cov_1dfb3amx2q.s[132]++;throw new errors.TypeError('ERR_ASYNC_TYPE',type);}else{cov_1dfb3amx2q.b[31][1]++;}cov_1dfb3amx2q.s[133]++;emitInitNative(asyncId,type,triggerAsyncId,resource);}function emitHookFactory(symbol,name){cov_1dfb3amx2q.f[22]++;cov_1dfb3amx2q.s[134]++;// Called from native. The asyncId stack handling is taken care of there
// before this is called.
// eslint-disable-next-line func-style
const fn=function(asyncId){cov_1dfb3amx2q.f[23]++;cov_1dfb3amx2q.s[135]++;active_hooks.call_depth+=1;// Use a single try/catch for all hook to avoid setting up one per
// iteration.
cov_1dfb3amx2q.s[136]++;try{cov_1dfb3amx2q.s[137]++;for(var i=0;i<active_hooks.array.length;i++){cov_1dfb3amx2q.s[138]++;if(typeof active_hooks.array[i][symbol]==='function'){cov_1dfb3amx2q.b[33][0]++;cov_1dfb3amx2q.s[139]++;active_hooks.array[i][symbol](asyncId);}else{cov_1dfb3amx2q.b[33][1]++;}}}catch(e){cov_1dfb3amx2q.s[140]++;fatalError(e);}finally{cov_1dfb3amx2q.s[141]++;active_hooks.call_depth-=1;}// Hooks can only be restored if there have been no recursive hook calls.
// Also the active hooks do not need to be restored if enable()/disable()
// weren't called during hook execution, in which case
// active_hooks.tmp_array will be null.
cov_1dfb3amx2q.s[142]++;if((cov_1dfb3amx2q.b[35][0]++,active_hooks.call_depth===0)&&(cov_1dfb3amx2q.b[35][1]++,active_hooks.tmp_array!==null)){cov_1dfb3amx2q.b[34][0]++;cov_1dfb3amx2q.s[143]++;restoreActiveHooks();}else{cov_1dfb3amx2q.b[34][1]++;}};// Set the name property of the anonymous function as it looks good in the
// stack trace.
cov_1dfb3amx2q.s[144]++;Object.defineProperty(fn,'name',{value:name});cov_1dfb3amx2q.s[145]++;return fn;}function emitBeforeScript(asyncId,triggerAsyncId){cov_1dfb3amx2q.f[24]++;cov_1dfb3amx2q.s[146]++;// Validate the ids. An id of -1 means it was never set and is visible on the
// call graph. An id < -1 should never happen in any circumstance. Throw
// on user calls because async state should still be recoverable.
if((cov_1dfb3amx2q.b[37][0]++,!Number.isSafeInteger(asyncId))||(cov_1dfb3amx2q.b[37][1]++,asyncId<-1)){cov_1dfb3amx2q.b[36][0]++;cov_1dfb3amx2q.s[147]++;fatalError(new errors.RangeError('ERR_INVALID_ASYNC_ID','asyncId',asyncId));}else{cov_1dfb3amx2q.b[36][1]++;}cov_1dfb3amx2q.s[148]++;if((cov_1dfb3amx2q.b[39][0]++,!Number.isSafeInteger(triggerAsyncId))||(cov_1dfb3amx2q.b[39][1]++,triggerAsyncId<-1)){cov_1dfb3amx2q.b[38][0]++;cov_1dfb3amx2q.s[149]++;fatalError(new errors.RangeError('ERR_INVALID_ASYNC_ID','triggerAsyncId',triggerAsyncId));}else{cov_1dfb3amx2q.b[38][1]++;}cov_1dfb3amx2q.s[150]++;pushAsyncIds(asyncId,triggerAsyncId);cov_1dfb3amx2q.s[151]++;if(async_hook_fields[kBefore]>0){cov_1dfb3amx2q.b[40][0]++;cov_1dfb3amx2q.s[152]++;emitBeforeNative(asyncId);}else{cov_1dfb3amx2q.b[40][1]++;}}function emitAfterScript(asyncId){cov_1dfb3amx2q.f[25]++;cov_1dfb3amx2q.s[153]++;if((cov_1dfb3amx2q.b[42][0]++,!Number.isSafeInteger(asyncId))||(cov_1dfb3amx2q.b[42][1]++,asyncId<-1)){cov_1dfb3amx2q.b[41][0]++;cov_1dfb3amx2q.s[154]++;fatalError(new errors.RangeError('ERR_INVALID_ASYNC_ID','asyncId',asyncId));}else{cov_1dfb3amx2q.b[41][1]++;}cov_1dfb3amx2q.s[155]++;if(async_hook_fields[kAfter]>0){cov_1dfb3amx2q.b[43][0]++;cov_1dfb3amx2q.s[156]++;emitAfterNative(asyncId);}else{cov_1dfb3amx2q.b[43][1]++;}cov_1dfb3amx2q.s[157]++;popAsyncIds(asyncId);}function emitDestroyScript(asyncId){cov_1dfb3amx2q.f[26]++;cov_1dfb3amx2q.s[158]++;if((cov_1dfb3amx2q.b[45][0]++,!Number.isSafeInteger(asyncId))||(cov_1dfb3amx2q.b[45][1]++,asyncId<-1)){cov_1dfb3amx2q.b[44][0]++;cov_1dfb3amx2q.s[159]++;fatalError(new errors.RangeError('ERR_INVALID_ASYNC_ID','asyncId',asyncId));}else{cov_1dfb3amx2q.b[44][1]++;}// Return early if there are no destroy callbacks, or invalid asyncId.
cov_1dfb3amx2q.s[160]++;if((cov_1dfb3amx2q.b[47][0]++,async_hook_fields[kDestroy]===0)||(cov_1dfb3amx2q.b[47][1]++,asyncId<=0)){cov_1dfb3amx2q.b[46][0]++;cov_1dfb3amx2q.s[161]++;return;}else{cov_1dfb3amx2q.b[46][1]++;}cov_1dfb3amx2q.s[162]++;async_wrap.queueDestroyAsyncId(asyncId);}// Used by C++ to call all init() callbacks. Because some state can be setup
// from C++ there's no need to perform all the same operations as in
// emitInitScript.
function emitInitNative(asyncId,type,triggerAsyncId,resource){cov_1dfb3amx2q.f[27]++;cov_1dfb3amx2q.s[163]++;active_hooks.call_depth+=1;// Use a single try/catch for all hook to avoid setting up one per iteration.
cov_1dfb3amx2q.s[164]++;try{cov_1dfb3amx2q.s[165]++;for(var i=0;i<active_hooks.array.length;i++){cov_1dfb3amx2q.s[166]++;if(typeof active_hooks.array[i][init_symbol]==='function'){cov_1dfb3amx2q.b[48][0]++;cov_1dfb3amx2q.s[167]++;active_hooks.array[i][init_symbol](asyncId,type,triggerAsyncId,resource);}else{cov_1dfb3amx2q.b[48][1]++;}}}catch(e){cov_1dfb3amx2q.s[168]++;fatalError(e);}finally{cov_1dfb3amx2q.s[169]++;active_hooks.call_depth-=1;}// Hooks can only be restored if there have been no recursive hook calls.
// Also the active hooks do not need to be restored if enable()/disable()
// weren't called during hook execution, in which case active_hooks.tmp_array
// will be null.
cov_1dfb3amx2q.s[170]++;if((cov_1dfb3amx2q.b[50][0]++,active_hooks.call_depth===0)&&(cov_1dfb3amx2q.b[50][1]++,active_hooks.tmp_array!==null)){cov_1dfb3amx2q.b[49][0]++;cov_1dfb3amx2q.s[171]++;restoreActiveHooks();}else{cov_1dfb3amx2q.b[49][1]++;}}// Placing all exports down here because the exported classes won't export
// otherwise.
cov_1dfb3amx2q.s[172]++;module.exports={// Public API
createHook,executionAsyncId,triggerAsyncId,// Embedder API
AsyncResource,runInAsyncIdScope,// Sensitive Embedder API
newUid,initTriggerId,setInitTriggerId,emitInit:emitInitScript,emitBefore:emitBeforeScript,emitAfter:emitAfterScript,emitDestroy:emitDestroyScript};