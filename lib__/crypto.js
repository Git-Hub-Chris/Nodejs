// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// Note: In 0.8 and before, crypto functions all defaulted to using
// binary-encoded strings rather than buffers.
'use strict';var cov_15k7rs3ug8=function(){var path='crypto.js',hash='ce49fa177444496ba822c36f2b9b37e9f054266e',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'crypto.js',statementMap:{'0':{start:{line:30,column:4},end:{line:30,column:28}},'1':{start:{line:31,column:0},end:{line:31,column:15}},'2':{start:{line:33,column:18},end:{line:33,column:53}},'3':{start:{line:38,column:4},end:{line:38,column:29}},'4':{start:{line:43,column:4},end:{line:43,column:37}},'5':{start:{line:47,column:4},end:{line:47,column:37}},'6':{start:{line:52,column:4},end:{line:52,column:44}},'7':{start:{line:62,column:4},end:{line:62,column:37}},'8':{start:{line:66,column:4},end:{line:66,column:34}},'9':{start:{line:70,column:4},end:{line:70,column:35}},'10':{start:{line:79,column:4},end:{line:79,column:35}},'11':{start:{line:80,column:20},end:{line:80,column:58}},'12':{start:{line:82,column:0},end:{line:128,column:2}},'13':{start:{line:130,column:0},end:{line:164,column:3}},'14':{start:{line:152,column:6},end:{line:152,column:48}},'15':{start:{line:160,column:6},end:{line:160,column:42}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:151,column:19},end:{line:151,column:20}},loc:{start:{line:151,column:25},end:{line:153,column:5}},line:151},'1':{name:'(anonymous_1)',decl:{start:{line:159,column:19},end:{line:159,column:20}},loc:{start:{line:159,column:30},end:{line:161,column:5}},line:159}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{'0':0,'1':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{assertCrypto,deprecate}=(cov_15k7rs3ug8.s[0]++,require('internal/util'));cov_15k7rs3ug8.s[1]++;assertCrypto();const constants=(cov_15k7rs3ug8.s[2]++,process.binding('constants').crypto);const{getFipsCrypto,setFipsCrypto,timingSafeEqual}=(cov_15k7rs3ug8.s[3]++,process.binding('crypto'));const{randomBytes,randomFill,randomFillSync}=(cov_15k7rs3ug8.s[4]++,require('internal/crypto/random'));const{pbkdf2,pbkdf2Sync}=(cov_15k7rs3ug8.s[5]++,require('internal/crypto/pbkdf2'));const{DiffieHellman,DiffieHellmanGroup,ECDH}=(cov_15k7rs3ug8.s[6]++,require('internal/crypto/diffiehellman'));const{Cipher,Cipheriv,Decipher,Decipheriv,privateDecrypt,privateEncrypt,publicDecrypt,publicEncrypt}=(cov_15k7rs3ug8.s[7]++,require('internal/crypto/cipher'));const{Sign,Verify}=(cov_15k7rs3ug8.s[8]++,require('internal/crypto/sig'));const{Hash,Hmac}=(cov_15k7rs3ug8.s[9]++,require('internal/crypto/hash'));const{getCiphers,getCurves,getDefaultEncoding,getHashes,setDefaultEncoding,setEngine,toBuf}=(cov_15k7rs3ug8.s[10]++,require('internal/crypto/util'));const Certificate=(cov_15k7rs3ug8.s[11]++,require('internal/crypto/certificate'));cov_15k7rs3ug8.s[12]++;module.exports=exports={// Methods
_toBuf:toBuf,createCipher:Cipher,createCipheriv:Cipheriv,createDecipher:Decipher,createDecipheriv:Decipheriv,createDiffieHellman:DiffieHellman,createDiffieHellmanGroup:DiffieHellmanGroup,createECDH:ECDH,createHash:Hash,createHmac:Hmac,createSign:Sign,createVerify:Verify,getCiphers,getCurves,getDiffieHellman:DiffieHellmanGroup,getHashes,pbkdf2,pbkdf2Sync,privateDecrypt,privateEncrypt,prng:randomBytes,pseudoRandomBytes:randomBytes,publicDecrypt,publicEncrypt,randomBytes,randomFill,randomFillSync,rng:randomBytes,setEngine,timingSafeEqual,// Classes
Certificate,Cipher,Cipheriv,Decipher,Decipheriv,DiffieHellman,DiffieHellmanGroup,ECDH,Hash,Hmac,Sign,Verify};cov_15k7rs3ug8.s[13]++;Object.defineProperties(exports,{fips:{get:getFipsCrypto,set:setFipsCrypto},DEFAULT_ENCODING:{enumerable:true,configurable:true,get:getDefaultEncoding,set:setDefaultEncoding},constants:{configurable:false,enumerable:true,value:constants},// Legacy API
createCredentials:{configurable:true,enumerable:true,get:deprecate(()=>{cov_15k7rs3ug8.f[0]++;cov_15k7rs3ug8.s[14]++;return require('tls').createSecureContext;},'crypto.createCredentials is deprecated. '+'Use tls.createSecureContext instead.','DEP0010')},Credentials:{configurable:true,enumerable:true,get:deprecate(function(){cov_15k7rs3ug8.f[1]++;cov_15k7rs3ug8.s[15]++;return require('tls').SecureContext;},'crypto.Credentials is deprecated. '+'Use tls.SecureContext instead.','DEP0011')}});