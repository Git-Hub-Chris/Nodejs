'use strict';var cov_2fhi4q4zkj=function(){var path='internal/crypto/certificate.js',hash='ea82fee55be8ebe52a8c24b22544881c416bc385',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'internal/crypto/certificate.js',statementMap:{'0':{start:{line:7,column:4},end:{line:7,column:29}},'1':{start:{line:11,column:4},end:{line:11,column:35}},'2':{start:{line:14,column:2},end:{line:14,column:33}},'3':{start:{line:18,column:2},end:{line:18,column:54}},'4':{start:{line:22,column:2},end:{line:22,column:54}},'5':{start:{line:28,column:2},end:{line:29,column:29}},'6':{start:{line:29,column:4},end:{line:29,column:29}},'7':{start:{line:32,column:0},end:{line:32,column:48}},'8':{start:{line:33,column:0},end:{line:33,column:56}},'9':{start:{line:34,column:0},end:{line:34,column:56}},'10':{start:{line:36,column:0},end:{line:36,column:46}},'11':{start:{line:37,column:0},end:{line:37,column:46}},'12':{start:{line:38,column:0},end:{line:38,column:38}},'13':{start:{line:40,column:0},end:{line:40,column:29}}},fnMap:{'0':{name:'verifySpkac',decl:{start:{line:13,column:9},end:{line:13,column:20}},loc:{start:{line:13,column:29},end:{line:15,column:1}},line:13},'1':{name:'exportPublicKey',decl:{start:{line:17,column:9},end:{line:17,column:24}},loc:{start:{line:17,column:43},end:{line:19,column:1}},line:17},'2':{name:'exportChallenge',decl:{start:{line:21,column:9},end:{line:21,column:24}},loc:{start:{line:21,column:43},end:{line:23,column:1}},line:21},'3':{name:'Certificate',decl:{start:{line:27,column:9},end:{line:27,column:20}},loc:{start:{line:27,column:23},end:{line:30,column:1}},line:27}},branchMap:{'0':{loc:{start:{line:28,column:2},end:{line:29,column:29}},type:'if',locations:[{start:{line:28,column:2},end:{line:29,column:29}},{start:{line:28,column:2},end:{line:29,column:29}}],line:28}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},f:{'0':0,'1':0,'2':0,'3':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{certExportChallenge,certExportPublicKey,certVerifySpkac}=(cov_2fhi4q4zkj.s[0]++,process.binding('crypto'));const{toBuf}=(cov_2fhi4q4zkj.s[1]++,require('internal/crypto/util'));function verifySpkac(object){cov_2fhi4q4zkj.f[0]++;cov_2fhi4q4zkj.s[2]++;return certVerifySpkac(object);}function exportPublicKey(object,encoding){cov_2fhi4q4zkj.f[1]++;cov_2fhi4q4zkj.s[3]++;return certExportPublicKey(toBuf(object,encoding));}function exportChallenge(object,encoding){cov_2fhi4q4zkj.f[2]++;cov_2fhi4q4zkj.s[4]++;return certExportChallenge(toBuf(object,encoding));}// For backwards compatibility reasons, this cannot be converted into a
// ES6 Class.
function Certificate(){cov_2fhi4q4zkj.f[3]++;cov_2fhi4q4zkj.s[5]++;if(!(this instanceof Certificate)){cov_2fhi4q4zkj.b[0][0]++;cov_2fhi4q4zkj.s[6]++;return new Certificate();}else{cov_2fhi4q4zkj.b[0][1]++;}}cov_2fhi4q4zkj.s[7]++;Certificate.prototype.verifySpkac=verifySpkac;cov_2fhi4q4zkj.s[8]++;Certificate.prototype.exportPublicKey=exportPublicKey;cov_2fhi4q4zkj.s[9]++;Certificate.prototype.exportChallenge=exportChallenge;cov_2fhi4q4zkj.s[10]++;Certificate.exportChallenge=exportChallenge;cov_2fhi4q4zkj.s[11]++;Certificate.exportPublicKey=exportPublicKey;cov_2fhi4q4zkj.s[12]++;Certificate.verifySpkac=verifySpkac;cov_2fhi4q4zkj.s[13]++;module.exports=Certificate;