'use strict';var cov_1gpktu2rts=function(){var path='internal/loader/ModuleJob.js',hash='ba8f594599a9759cb72d8159ae44a5fd537fe5e3',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'internal/loader/ModuleJob.js',statementMap:{'0':{start:{line:3,column:33},end:{line:3,column:65}},'1':{start:{line:4,column:24},end:{line:4,column:45}},'2':{start:{line:5,column:29},end:{line:5,column:52}},'3':{start:{line:6,column:23},end:{line:6,column:60}},'4':{start:{line:8,column:13},end:{line:8,column:34}},'5':{start:{line:14,column:4},end:{line:14,column:39}},'6':{start:{line:15,column:4},end:{line:15,column:41}},'7':{start:{line:16,column:4},end:{line:16,column:25}},'8':{start:{line:17,column:4},end:{line:17,column:22}},'9':{start:{line:18,column:4},end:{line:18,column:26}},'10':{start:{line:20,column:4},end:{line:49,column:5}},'11':{start:{line:23,column:6},end:{line:23,column:62}},'12':{start:{line:24,column:6},end:{line:24,column:30}},'13':{start:{line:25,column:21},end:{line:36,column:7}},'14':{start:{line:26,column:31},end:{line:26,column:33}},'15':{start:{line:27,column:8},end:{line:27,column:47}},'16':{start:{line:28,column:8},end:{line:34,column:11}},'17':{start:{line:30,column:12},end:{line:30,column:63}},'18':{start:{line:31,column:10},end:{line:31,column:52}},'19':{start:{line:32,column:32},end:{line:32,column:58}},'20':{start:{line:33,column:10},end:{line:33,column:45}},'21':{start:{line:35,column:8},end:{line:35,column:47}},'22':{start:{line:37,column:6},end:{line:37,column:29}},'23':{start:{line:41,column:6},end:{line:41,column:36}},'24':{start:{line:43,column:32},end:{line:43,column:58}},'25':{start:{line:43,column:44},end:{line:43,column:58}},'26':{start:{line:44,column:6},end:{line:44,column:47}},'27':{start:{line:45,column:6},end:{line:45,column:45}},'28':{start:{line:46,column:6},end:{line:46,column:35}},'29':{start:{line:47,column:6},end:{line:47,column:41}},'30':{start:{line:48,column:6},end:{line:48,column:45}},'31':{start:{line:53,column:4},end:{line:55,column:5}},'32':{start:{line:54,column:6},end:{line:54,column:31}},'33':{start:{line:56,column:4},end:{line:99,column:7}},'34':{start:{line:57,column:26},end:{line:57,column:39}},'35':{start:{line:58,column:35},end:{line:58,column:36}},'36':{start:{line:60,column:23},end:{line:77,column:7}},'37':{start:{line:61,column:8},end:{line:63,column:9}},'38':{start:{line:62,column:10},end:{line:62,column:17}},'39':{start:{line:64,column:8},end:{line:64,column:35}},'40':{start:{line:65,column:8},end:{line:76,column:11}},'41':{start:{line:66,column:10},end:{line:68,column:11}},'42':{start:{line:67,column:12},end:{line:67,column:36}},'43':{start:{line:69,column:10},end:{line:69,column:26}},'44':{start:{line:71,column:10},end:{line:74,column:11}},'45':{start:{line:72,column:12},end:{line:72,column:27}},'46':{start:{line:73,column:12},end:{line:73,column:33}},'47':{start:{line:75,column:10},end:{line:75,column:26}},'48':{start:{line:78,column:28},end:{line:97,column:7}},'49':{start:{line:79,column:8},end:{line:96,column:9}},'50':{start:{line:82,column:10},end:{line:95,column:11}},'51':{start:{line:83,column:12},end:{line:83,column:31}},'52':{start:{line:85,column:12},end:{line:94,column:13}},'53':{start:{line:86,column:14},end:{line:86,column:40}},'54':{start:{line:87,column:14},end:{line:89,column:15}},'55':{start:{line:88,column:16},end:{line:88,column:61}},'56':{start:{line:90,column:14},end:{line:90,column:35}},'57':{start:{line:92,column:14},end:{line:92,column:22}},'58':{start:{line:93,column:14},end:{line:93,column:24}},'59':{start:{line:98,column:6},end:{line:98,column:21}},'60':{start:{line:103,column:19},end:{line:103,column:43}},'61':{start:{line:104,column:4},end:{line:111,column:5}},'62':{start:{line:105,column:6},end:{line:105,column:24}},'63':{start:{line:107,column:6},end:{line:107,column:14}},'64':{start:{line:108,column:6},end:{line:108,column:27}},'65':{start:{line:109,column:6},end:{line:109,column:21}},'66':{start:{line:110,column:6},end:{line:110,column:14}},'67':{start:{line:112,column:4},end:{line:112,column:18}},'68':{start:{line:115,column:0},end:{line:115,column:49}},'69':{start:{line:116,column:0},end:{line:116,column:27}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:13},end:{line:8,column:14}},loc:{start:{line:8,column:19},end:{line:8,column:34}},line:8},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:2},end:{line:13,column:3}},loc:{start:{line:13,column:43},end:{line:50,column:3}},line:13},'2':{name:'(anonymous_2)',decl:{start:{line:25,column:21},end:{line:25,column:22}},loc:{start:{line:25,column:33},end:{line:36,column:7}},line:25},'3':{name:'(anonymous_3)',decl:{start:{line:28,column:25},end:{line:28,column:26}},loc:{start:{line:28,column:56},end:{line:34,column:9}},line:28},'4':{name:'(anonymous_4)',decl:{start:{line:43,column:32},end:{line:43,column:33}},loc:{start:{line:43,column:44},end:{line:43,column:58}},line:43},'5':{name:'(anonymous_5)',decl:{start:{line:52,column:2},end:{line:52,column:3}},loc:{start:{line:52,column:16},end:{line:100,column:3}},line:52},'6':{name:'(anonymous_6)',decl:{start:{line:56,column:43},end:{line:56,column:44}},loc:{start:{line:56,column:70},end:{line:99,column:5}},line:56},'7':{name:'(anonymous_7)',decl:{start:{line:60,column:23},end:{line:60,column:24}},loc:{start:{line:60,column:38},end:{line:77,column:7}},line:60},'8':{name:'(anonymous_8)',decl:{start:{line:65,column:30},end:{line:65,column:31}},loc:{start:{line:65,column:50},end:{line:70,column:9}},line:65},'9':{name:'(anonymous_9)',decl:{start:{line:70,column:11},end:{line:70,column:12}},loc:{start:{line:70,column:18},end:{line:76,column:9}},line:70},'10':{name:'(anonymous_10)',decl:{start:{line:78,column:28},end:{line:78,column:29}},loc:{start:{line:78,column:34},end:{line:97,column:7}},line:78},'11':{name:'(anonymous_11)',decl:{start:{line:102,column:2},end:{line:102,column:3}},loc:{start:{line:102,column:14},end:{line:113,column:3}},line:102}},branchMap:{'0':{loc:{start:{line:20,column:4},end:{line:49,column:5}},type:'if',locations:[{start:{line:20,column:4},end:{line:49,column:5}},{start:{line:20,column:4},end:{line:49,column:5}}],line:20},'1':{loc:{start:{line:53,column:4},end:{line:55,column:5}},type:'if',locations:[{start:{line:53,column:4},end:{line:55,column:5}},{start:{line:53,column:4},end:{line:55,column:5}}],line:53},'2':{loc:{start:{line:61,column:8},end:{line:63,column:9}},type:'if',locations:[{start:{line:61,column:8},end:{line:63,column:9}},{start:{line:61,column:8},end:{line:63,column:9}}],line:61},'3':{loc:{start:{line:71,column:10},end:{line:74,column:11}},type:'if',locations:[{start:{line:71,column:10},end:{line:74,column:11}},{start:{line:71,column:10},end:{line:74,column:11}}],line:71},'4':{loc:{start:{line:79,column:8},end:{line:96,column:9}},type:'if',locations:[{start:{line:79,column:8},end:{line:96,column:9}},{start:{line:79,column:8},end:{line:96,column:9}}],line:79},'5':{loc:{start:{line:82,column:10},end:{line:95,column:11}},type:'if',locations:[{start:{line:82,column:10},end:{line:95,column:11}},{start:{line:82,column:10},end:{line:95,column:11}}],line:82}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{SafeSet,SafePromise}=(cov_1gpktu2rts.s[0]++,require('internal/safe_globals'));const resolvedPromise=(cov_1gpktu2rts.s[1]++,SafePromise.resolve());const resolvedArrayPromise=(cov_1gpktu2rts.s[2]++,SafePromise.resolve([]));const{ModuleWrap}=(cov_1gpktu2rts.s[3]++,require('internal/loader/ModuleWrap'));cov_1gpktu2rts.s[4]++;const NOOP=()=>{/* No-op */cov_1gpktu2rts.f[0]++;};class ModuleJob{/**
   * @param {module: ModuleWrap?, compiled: Promise} moduleProvider
   */constructor(loader,moduleProvider,url){cov_1gpktu2rts.f[1]++;cov_1gpktu2rts.s[5]++;this.url=`${moduleProvider.url}`;cov_1gpktu2rts.s[6]++;this.moduleProvider=moduleProvider;cov_1gpktu2rts.s[7]++;this.loader=loader;cov_1gpktu2rts.s[8]++;this.error=null;cov_1gpktu2rts.s[9]++;this.hadError=false;cov_1gpktu2rts.s[10]++;if(moduleProvider instanceof ModuleWrap!==true){cov_1gpktu2rts.b[0][0]++;cov_1gpktu2rts.s[11]++;// linked == promise for dependency jobs, with module populated,
// module wrapper linked
this.modulePromise=this.moduleProvider.createModule();cov_1gpktu2rts.s[12]++;this.module=undefined;cov_1gpktu2rts.s[13]++;const linked=async()=>{cov_1gpktu2rts.f[2]++;const dependencyJobs=(cov_1gpktu2rts.s[14]++,[]);cov_1gpktu2rts.s[15]++;this.module=await this.modulePromise;cov_1gpktu2rts.s[16]++;this.module.link(async dependencySpecifier=>{cov_1gpktu2rts.f[3]++;const dependencyJobPromise=(cov_1gpktu2rts.s[17]++,this.loader.getModuleJob(this,dependencySpecifier));cov_1gpktu2rts.s[18]++;dependencyJobs.push(dependencyJobPromise);const dependencyJob=(cov_1gpktu2rts.s[19]++,await dependencyJobPromise);cov_1gpktu2rts.s[20]++;return dependencyJob.modulePromise;});cov_1gpktu2rts.s[21]++;return SafePromise.all(dependencyJobs);};cov_1gpktu2rts.s[22]++;this.linked=linked();// instantiated == deep dependency jobs wrappers instantiated,
//module wrapper instantiated
cov_1gpktu2rts.s[23]++;this.instantiated=undefined;}else{cov_1gpktu2rts.b[0][1]++;cov_1gpktu2rts.s[24]++;const getModuleProvider=async()=>{cov_1gpktu2rts.f[4]++;cov_1gpktu2rts.s[25]++;return moduleProvider;};cov_1gpktu2rts.s[26]++;this.modulePromise=getModuleProvider();cov_1gpktu2rts.s[27]++;this.moduleProvider={finish:NOOP};cov_1gpktu2rts.s[28]++;this.module=moduleProvider;cov_1gpktu2rts.s[29]++;this.linked=resolvedArrayPromise;cov_1gpktu2rts.s[30]++;this.instantiated=this.modulePromise;}}instantiate(){cov_1gpktu2rts.f[5]++;cov_1gpktu2rts.s[31]++;if(this.instantiated){cov_1gpktu2rts.b[1][0]++;cov_1gpktu2rts.s[32]++;return this.instantiated;}else{cov_1gpktu2rts.b[1][1]++;}cov_1gpktu2rts.s[33]++;return this.instantiated=new Promise(async(resolve,reject)=>{cov_1gpktu2rts.f[6]++;const jobsInGraph=(cov_1gpktu2rts.s[34]++,new SafeSet());let jobsReadyToInstantiate=(cov_1gpktu2rts.s[35]++,0);// (this must be sync for counter to work)
cov_1gpktu2rts.s[36]++;const queueJob=moduleJob=>{cov_1gpktu2rts.f[7]++;cov_1gpktu2rts.s[37]++;if(jobsInGraph.has(moduleJob)){cov_1gpktu2rts.b[2][0]++;cov_1gpktu2rts.s[38]++;return;}else{cov_1gpktu2rts.b[2][1]++;}cov_1gpktu2rts.s[39]++;jobsInGraph.add(moduleJob);cov_1gpktu2rts.s[40]++;moduleJob.linked.then(dependencyJobs=>{cov_1gpktu2rts.f[8]++;cov_1gpktu2rts.s[41]++;for(const dependencyJob of dependencyJobs){cov_1gpktu2rts.s[42]++;queueJob(dependencyJob);}cov_1gpktu2rts.s[43]++;checkComplete();},e=>{cov_1gpktu2rts.f[9]++;cov_1gpktu2rts.s[44]++;if(!this.hadError){cov_1gpktu2rts.b[3][0]++;cov_1gpktu2rts.s[45]++;this.error=e;cov_1gpktu2rts.s[46]++;this.hadError=true;}else{cov_1gpktu2rts.b[3][1]++;}cov_1gpktu2rts.s[47]++;checkComplete();});};cov_1gpktu2rts.s[48]++;const checkComplete=()=>{cov_1gpktu2rts.f[10]++;cov_1gpktu2rts.s[49]++;if(++jobsReadyToInstantiate===jobsInGraph.size){cov_1gpktu2rts.b[4][0]++;cov_1gpktu2rts.s[50]++;// I believe we only throw once the whole tree is finished loading?
// or should the error bail early, leaving entire tree to still load?
if(this.hadError){cov_1gpktu2rts.b[5][0]++;cov_1gpktu2rts.s[51]++;reject(this.error);}else{cov_1gpktu2rts.b[5][1]++;cov_1gpktu2rts.s[52]++;try{cov_1gpktu2rts.s[53]++;this.module.instantiate();cov_1gpktu2rts.s[54]++;for(const dependencyJob of jobsInGraph){cov_1gpktu2rts.s[55]++;dependencyJob.instantiated=resolvedPromise;}cov_1gpktu2rts.s[56]++;resolve(this.module);}catch(e){cov_1gpktu2rts.s[57]++;e.stack;cov_1gpktu2rts.s[58]++;reject(e);}}}else{cov_1gpktu2rts.b[4][1]++;}};cov_1gpktu2rts.s[59]++;queueJob(this);});}async run(){cov_1gpktu2rts.f[11]++;const module=(cov_1gpktu2rts.s[60]++,await this.instantiate());cov_1gpktu2rts.s[61]++;try{cov_1gpktu2rts.s[62]++;module.evaluate();}catch(e){cov_1gpktu2rts.s[63]++;e.stack;cov_1gpktu2rts.s[64]++;this.hadError=true;cov_1gpktu2rts.s[65]++;this.error=e;cov_1gpktu2rts.s[66]++;throw e;}cov_1gpktu2rts.s[67]++;return module;}}cov_1gpktu2rts.s[68]++;Object.setPrototypeOf(ModuleJob.prototype,null);cov_1gpktu2rts.s[69]++;module.exports=ModuleJob;