'use strict';var cov_lxve043s4=function(){var path='internal/loader/ModuleWrap.js',hash='6c576cf8cd6965555349ce8e4325fc94c55701a5',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'internal/loader/ModuleWrap.js',statementMap:{'0':{start:{line:3,column:23},end:{line:3,column:53}},'1':{start:{line:4,column:14},end:{line:4,column:45}},'2':{start:{line:5,column:18},end:{line:5,column:58}},'3':{start:{line:6,column:17},end:{line:6,column:56}},'4':{start:{line:8,column:33},end:{line:13,column:1}},'5':{start:{line:9,column:14},end:{line:9,column:60}},'6':{start:{line:10,column:2},end:{line:10,column:26}},'7':{start:{line:10,column:23},end:{line:10,column:24}},'8':{start:{line:11,column:2},end:{line:11,column:20}},'9':{start:{line:12,column:2},end:{line:12,column:24}},'10':{start:{line:15,column:28},end:{line:55,column:1}},'11':{start:{line:16,column:2},end:{line:18,column:4}},'12':{start:{line:19,column:16},end:{line:19,column:54}},'13':{start:{line:19,column:44},end:{line:19,column:53}},'14':{start:{line:21,column:14},end:{line:32,column:3}},'15':{start:{line:22,column:40},end:{line:22,column:61}},'16':{start:{line:26,column:38},end:{line:29,column:8}},'17':{start:{line:33,column:27},end:{line:33,column:67}},'18':{start:{line:34,column:2},end:{line:34,column:33}},'19':{start:{line:35,column:33},end:{line:35,column:62}},'20':{start:{line:37,column:20},end:{line:44,column:56}},'21':{start:{line:38,column:32},end:{line:38,column:42}},'22':{start:{line:41,column:42},end:{line:41,column:63}},'23':{start:{line:45,column:2},end:{line:47,column:3}},'24':{start:{line:46,column:4},end:{line:46,column:41}},'25':{start:{line:46,column:22},end:{line:46,column:39}},'26':{start:{line:48,column:17},end:{line:48,column:52}},'27':{start:{line:49,column:2},end:{line:49,column:44}},'28':{start:{line:49,column:26},end:{line:49,column:42}},'29':{start:{line:50,column:2},end:{line:50,column:23}},'30':{start:{line:51,column:2},end:{line:54,column:4}},'31':{start:{line:57,column:0},end:{line:61,column:2}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:33},end:{line:8,column:34}},loc:{start:{line:8,column:40},end:{line:13,column:1}},line:8},'1':{name:'(anonymous_1)',decl:{start:{line:10,column:11},end:{line:10,column:12}},loc:{start:{line:10,column:23},end:{line:10,column:24}},line:10},'2':{name:'(anonymous_2)',decl:{start:{line:15,column:28},end:{line:15,column:29}},loc:{start:{line:15,column:61},end:{line:55,column:1}},line:15},'3':{name:'(anonymous_3)',decl:{start:{line:19,column:34},end:{line:19,column:35}},loc:{start:{line:19,column:44},end:{line:19,column:53}},line:19},'4':{name:'(anonymous_4)',decl:{start:{line:22,column:30},end:{line:22,column:31}},loc:{start:{line:22,column:40},end:{line:22,column:61}},line:22},'5':{name:'(anonymous_5)',decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:38},end:{line:29,column:8}},line:26},'6':{name:'(anonymous_6)',decl:{start:{line:38,column:22},end:{line:38,column:23}},loc:{start:{line:38,column:32},end:{line:38,column:42}},line:38},'7':{name:'(anonymous_7)',decl:{start:{line:41,column:32},end:{line:41,column:33}},loc:{start:{line:41,column:42},end:{line:41,column:63}},line:41},'8':{name:'(anonymous_8)',decl:{start:{line:46,column:16},end:{line:46,column:17}},loc:{start:{line:46,column:22},end:{line:46,column:39}},line:46},'9':{name:'(anonymous_9)',decl:{start:{line:49,column:14},end:{line:49,column:15}},loc:{start:{line:49,column:26},end:{line:49,column:42}},line:49}},branchMap:{'0':{loc:{start:{line:15,column:38},end:{line:15,column:46}},type:'default-arg',locations:[{start:{line:15,column:44},end:{line:15,column:46}}],line:15},'1':{loc:{start:{line:45,column:2},end:{line:47,column:3}},type:'if',locations:[{start:{line:45,column:2},end:{line:47,column:3}},{start:{line:45,column:2},end:{line:47,column:3}}],line:45}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0},b:{'0':[0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{ModuleWrap}=(cov_lxve043s4.s[0]++,process.binding('module_wrap'));const debug=(cov_lxve043s4.s[1]++,require('util').debuglog('esm'));const ArrayJoin=(cov_lxve043s4.s[2]++,Function.call.bind(Array.prototype.join));const ArrayMap=(cov_lxve043s4.s[3]++,Function.call.bind(Array.prototype.map));cov_lxve043s4.s[4]++;const getNamespaceOfModuleWrap=m=>{cov_lxve043s4.f[0]++;const tmp=(cov_lxve043s4.s[5]++,new ModuleWrap('import * as _ from "";_;',''));cov_lxve043s4.s[6]++;tmp.link(async()=>{cov_lxve043s4.f[1]++;cov_lxve043s4.s[7]++;return m;});cov_lxve043s4.s[8]++;tmp.instantiate();cov_lxve043s4.s[9]++;return tmp.evaluate();};cov_lxve043s4.s[10]++;const createDynamicModule=(exports,url=(cov_lxve043s4.b[0][0]++,''),evaluate)=>{cov_lxve043s4.f[2]++;cov_lxve043s4.s[11]++;debug(`creating ESM facade for ${url} with exports: ${ArrayJoin(exports,', ')}`);const names=(cov_lxve043s4.s[12]++,ArrayMap(exports,name=>{cov_lxve043s4.f[3]++;cov_lxve043s4.s[13]++;return`${name}`;}));// sanitized ESM for reflection purposes
const src=(cov_lxve043s4.s[14]++,`export let executor;
  ${ArrayJoin(ArrayMap(names,name=>{cov_lxve043s4.f[4]++;cov_lxve043s4.s[15]++;return`export let $${name}`;}),';\n')}
  ;(() => [
    fn => executor = fn,
    { exports: { ${ArrayJoin(ArrayMap(names,name=>{cov_lxve043s4.f[5]++;cov_lxve043s4.s[16]++;return`${name}: {
        get: () => $${name},
        set: v => $${name} = v
      }`;}),',\n')} } }
  ]);
  `);const reflectiveModule=(cov_lxve043s4.s[17]++,new ModuleWrap(src,`cjs-facade:${url}`));cov_lxve043s4.s[18]++;reflectiveModule.instantiate();const[setExecutor,reflect]=(cov_lxve043s4.s[19]++,reflectiveModule.evaluate()());// public exposed ESM
const reexports=(cov_lxve043s4.s[20]++,`import { executor,
    ${ArrayMap(names,name=>{cov_lxve043s4.f[6]++;cov_lxve043s4.s[21]++;return`$${name}`;})}
  } from "";
  export {
    ${ArrayJoin(ArrayMap(names,name=>{cov_lxve043s4.f[7]++;cov_lxve043s4.s[22]++;return`$${name} as ${name}`;}),', ')}
  }
  // add await to this later if top level await comes along
  typeof executor === "function" ? executor() : void 0;`);cov_lxve043s4.s[23]++;if(typeof evaluate==='function'){cov_lxve043s4.b[1][0]++;cov_lxve043s4.s[24]++;setExecutor(()=>{cov_lxve043s4.f[8]++;cov_lxve043s4.s[25]++;return evaluate(reflect);});}else{cov_lxve043s4.b[1][1]++;}const runner=(cov_lxve043s4.s[26]++,new ModuleWrap(reexports,`${url}`));cov_lxve043s4.s[27]++;runner.link(async()=>{cov_lxve043s4.f[9]++;cov_lxve043s4.s[28]++;return reflectiveModule;});cov_lxve043s4.s[29]++;runner.instantiate();cov_lxve043s4.s[30]++;return{module:runner,reflect};};cov_lxve043s4.s[31]++;module.exports={createDynamicModule,getNamespaceOfModuleWrap,ModuleWrap};