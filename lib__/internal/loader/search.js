'use strict';var cov_oupbpt3kx=function(){var path='internal/loader/search.js',hash='f66a698cd0e3ab8ae17284e84d08766bd098808f',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'internal/loader/search.js',statementMap:{'0':{start:{line:3,column:16},end:{line:3,column:30}},'1':{start:{line:4,column:18},end:{line:4,column:35}},'2':{start:{line:5,column:15},end:{line:5,column:41}},'3':{start:{line:6,column:20},end:{line:6,column:50}},'4':{start:{line:8,column:0},end:{line:33,column:2}},'5':{start:{line:9,column:2},end:{line:9,column:23}},'6':{start:{line:10,column:2},end:{line:13,column:3}},'7':{start:{line:12,column:4},end:{line:12,column:57}},'8':{start:{line:14,column:2},end:{line:14,column:19}},'9':{start:{line:15,column:2},end:{line:32,column:3}},'10':{start:{line:16,column:4},end:{line:16,column:33}},'11':{start:{line:18,column:4},end:{line:18,column:12}},'12':{start:{line:19,column:16},end:{line:19,column:17}},'13':{start:{line:20,column:4},end:{line:30,column:5}},'14':{start:{line:21,column:29},end:{line:21,column:42}},'15':{start:{line:22,column:21},end:{line:22,column:65}},'16':{start:{line:23,column:6},end:{line:24,column:48}},'17':{start:{line:25,column:20},end:{line:25,column:62}},'18':{start:{line:26,column:6},end:{line:27,column:44}},'19':{start:{line:31,column:4},end:{line:31,column:16}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:17},end:{line:8,column:18}},loc:{start:{line:8,column:35},end:{line:33,column:1}},line:8}},branchMap:{'0':{loc:{start:{line:10,column:2},end:{line:13,column:3}},type:'if',locations:[{start:{line:10,column:2},end:{line:13,column:3}},{start:{line:10,column:2},end:{line:13,column:3}}],line:10}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0},f:{'0':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{URL}=(cov_oupbpt3kx.s[0]++,require('url'));const CJSmodule=(cov_oupbpt3kx.s[1]++,require('module'));const errors=(cov_oupbpt3kx.s[2]++,require('internal/errors'));const{resolve}=(cov_oupbpt3kx.s[3]++,process.binding('module_wrap'));cov_oupbpt3kx.s[4]++;module.exports=(target,base)=>{cov_oupbpt3kx.f[0]++;cov_oupbpt3kx.s[5]++;target=`${target}`;cov_oupbpt3kx.s[6]++;if(base===undefined){cov_oupbpt3kx.b[0][0]++;cov_oupbpt3kx.s[7]++;// We cannot search without a base.
throw new errors.Error('ERR_MISSING_MODULE',target);}else{cov_oupbpt3kx.b[0][1]++;}cov_oupbpt3kx.s[8]++;base=`${base}`;cov_oupbpt3kx.s[9]++;try{cov_oupbpt3kx.s[10]++;return resolve(target,base);}catch(e){cov_oupbpt3kx.s[11]++;e.stack;// cause V8 to generate stack before rethrow
let error=(cov_oupbpt3kx.s[12]++,e);cov_oupbpt3kx.s[13]++;try{const questionedBase=(cov_oupbpt3kx.s[14]++,new URL(base));const tmpMod=(cov_oupbpt3kx.s[15]++,new CJSmodule(questionedBase.pathname,null));cov_oupbpt3kx.s[16]++;tmpMod.paths=CJSmodule._nodeModulePaths(new URL('./',questionedBase).pathname);const found=(cov_oupbpt3kx.s[17]++,CJSmodule._resolveFilename(target,tmpMod));cov_oupbpt3kx.s[18]++;error=new errors.Error('ERR_MODULE_RESOLUTION_LEGACY',target,base,found);}catch(problemChecking){// ignore
}cov_oupbpt3kx.s[19]++;throw error;}};