// LazyTransform is a special type of Transform stream that is lazily loaded.
// This is used for performance with bi-API-ship: when two APIs are available
// for the stream, one conventional and one non-conventional.
'use strict';var cov_2qhlxz9z49=function(){var path='internal/streams/lazy_transform.js',hash='67fb0cf90a8e1dab136db17d8041278538c40d64',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'internal/streams/lazy_transform.js',statementMap:{'0':{start:{line:6,column:15},end:{line:6,column:32}},'1':{start:{line:7,column:13},end:{line:7,column:28}},'2':{start:{line:8,column:15},end:{line:8,column:32}},'3':{start:{line:10,column:0},end:{line:10,column:31}},'4':{start:{line:13,column:2},end:{line:13,column:26}},'5':{start:{line:14,column:2},end:{line:14,column:23}},'6':{start:{line:15,column:2},end:{line:15,column:23}},'7':{start:{line:17,column:0},end:{line:17,column:47}},'8':{start:{line:20,column:2},end:{line:29,column:4}},'9':{start:{line:21,column:4},end:{line:21,column:47}},'10':{start:{line:22,column:4},end:{line:22,column:46}},'11':{start:{line:24,column:4},end:{line:26,column:5}},'12':{start:{line:25,column:6},end:{line:25,column:68}},'13':{start:{line:28,column:4},end:{line:28,column:22}},'14':{start:{line:33,column:2},end:{line:40,column:4}},'15':{start:{line:34,column:4},end:{line:39,column:7}},'16':{start:{line:43,column:0},end:{line:62,column:3}}},fnMap:{'0':{name:'LazyTransform',decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:32},end:{line:16,column:1}},line:12},'1':{name:'makeGetter',decl:{start:{line:19,column:9},end:{line:19,column:19}},loc:{start:{line:19,column:26},end:{line:30,column:1}},line:19},'2':{name:'(anonymous_2)',decl:{start:{line:20,column:9},end:{line:20,column:10}},loc:{start:{line:20,column:20},end:{line:29,column:3}},line:20},'3':{name:'makeSetter',decl:{start:{line:32,column:9},end:{line:32,column:19}},loc:{start:{line:32,column:26},end:{line:41,column:1}},line:32},'4':{name:'(anonymous_4)',decl:{start:{line:33,column:9},end:{line:33,column:10}},loc:{start:{line:33,column:23},end:{line:40,column:3}},line:33}},branchMap:{'0':{loc:{start:{line:24,column:4},end:{line:26,column:5}},type:'if',locations:[{start:{line:24,column:4},end:{line:26,column:5}},{start:{line:24,column:4},end:{line:26,column:5}}],line:24},'1':{loc:{start:{line:24,column:8},end:{line:24,column:56}},type:'binary-expr',locations:[{start:{line:24,column:8},end:{line:24,column:22}},{start:{line:24,column:26},end:{line:24,column:56}}],line:24}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const stream=(cov_2qhlxz9z49.s[0]++,require('stream'));const util=(cov_2qhlxz9z49.s[1]++,require('util'));const crypto=(cov_2qhlxz9z49.s[2]++,require('crypto'));cov_2qhlxz9z49.s[3]++;module.exports=LazyTransform;function LazyTransform(options){cov_2qhlxz9z49.f[0]++;cov_2qhlxz9z49.s[4]++;this._options=options;cov_2qhlxz9z49.s[5]++;this.writable=true;cov_2qhlxz9z49.s[6]++;this.readable=true;}cov_2qhlxz9z49.s[7]++;util.inherits(LazyTransform,stream.Transform);function makeGetter(name){cov_2qhlxz9z49.f[1]++;cov_2qhlxz9z49.s[8]++;return function(){cov_2qhlxz9z49.f[2]++;cov_2qhlxz9z49.s[9]++;stream.Transform.call(this,this._options);cov_2qhlxz9z49.s[10]++;this._writableState.decodeStrings=false;cov_2qhlxz9z49.s[11]++;if((cov_2qhlxz9z49.b[1][0]++,!this._options)||(cov_2qhlxz9z49.b[1][1]++,!this._options.defaultEncoding)){cov_2qhlxz9z49.b[0][0]++;cov_2qhlxz9z49.s[12]++;this._writableState.defaultEncoding=crypto.DEFAULT_ENCODING;}else{cov_2qhlxz9z49.b[0][1]++;}cov_2qhlxz9z49.s[13]++;return this[name];};}function makeSetter(name){cov_2qhlxz9z49.f[3]++;cov_2qhlxz9z49.s[14]++;return function(val){cov_2qhlxz9z49.f[4]++;cov_2qhlxz9z49.s[15]++;Object.defineProperty(this,name,{value:val,enumerable:true,configurable:true,writable:true});};}cov_2qhlxz9z49.s[16]++;Object.defineProperties(LazyTransform.prototype,{_readableState:{get:makeGetter('_readableState'),set:makeSetter('_readableState'),configurable:true,enumerable:true},_writableState:{get:makeGetter('_writableState'),set:makeSetter('_writableState'),configurable:true,enumerable:true},_transformState:{get:makeGetter('_transformState'),set:makeSetter('_transformState'),configurable:true,enumerable:true}});