// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';var cov_40lt9qjva=function(){var path='string_decoder.js',hash='3f905aef19e9e7890c6d36a661c255e0e350a0d8',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'string_decoder.js',statementMap:{'0':{start:{line:24,column:15},end:{line:24,column:39}},'1':{start:{line:25,column:21},end:{line:25,column:45}},'2':{start:{line:26,column:15},end:{line:26,column:41}},'3':{start:{line:27,column:19},end:{line:27,column:57}},'4':{start:{line:32,column:15},end:{line:32,column:50}},'5':{start:{line:33,column:2},end:{line:35,column:60}},'6':{start:{line:35,column:4},end:{line:35,column:60}},'7':{start:{line:36,column:2},end:{line:36,column:21}},'8':{start:{line:42,column:0},end:{line:42,column:38}},'9':{start:{line:44,column:2},end:{line:44,column:46}},'10':{start:{line:46,column:2},end:{line:65,column:3}},'11':{start:{line:48,column:6},end:{line:48,column:28}},'12':{start:{line:49,column:6},end:{line:49,column:26}},'13':{start:{line:50,column:6},end:{line:50,column:13}},'14':{start:{line:51,column:6},end:{line:51,column:12}},'15':{start:{line:53,column:6},end:{line:53,column:35}},'16':{start:{line:54,column:6},end:{line:54,column:13}},'17':{start:{line:55,column:6},end:{line:55,column:12}},'18':{start:{line:57,column:6},end:{line:57,column:29}},'19':{start:{line:58,column:6},end:{line:58,column:27}},'20':{start:{line:59,column:6},end:{line:59,column:13}},'21':{start:{line:60,column:6},end:{line:60,column:12}},'22':{start:{line:62,column:6},end:{line:62,column:31}},'23':{start:{line:63,column:6},end:{line:63,column:27}},'24':{start:{line:64,column:6},end:{line:64,column:13}},'25':{start:{line:66,column:2},end:{line:66,column:20}},'26':{start:{line:67,column:2},end:{line:67,column:21}},'27':{start:{line:68,column:2},end:{line:68,column:41}},'28':{start:{line:71,column:0},end:{line:88,column:2}},'29':{start:{line:72,column:2},end:{line:73,column:14}},'30':{start:{line:73,column:4},end:{line:73,column:14}},'31':{start:{line:76,column:2},end:{line:84,column:3}},'32':{start:{line:77,column:4},end:{line:77,column:27}},'33':{start:{line:78,column:4},end:{line:79,column:16}},'34':{start:{line:79,column:6},end:{line:79,column:16}},'35':{start:{line:80,column:4},end:{line:80,column:22}},'36':{start:{line:81,column:4},end:{line:81,column:22}},'37':{start:{line:83,column:4},end:{line:83,column:10}},'38':{start:{line:85,column:2},end:{line:86,column:59}},'39':{start:{line:86,column:4},end:{line:86,column:59}},'40':{start:{line:87,column:2},end:{line:87,column:17}},'41':{start:{line:90,column:0},end:{line:90,column:38}},'42':{start:{line:93,column:0},end:{line:93,column:40}},'43':{start:{line:96,column:0},end:{line:103,column:2}},'44':{start:{line:97,column:2},end:{line:100,column:3}},'45':{start:{line:98,column:4},end:{line:98,column:78}},'46':{start:{line:99,column:4},end:{line:99,column:68}},'47':{start:{line:101,column:2},end:{line:101,column:73}},'48':{start:{line:102,column:2},end:{line:102,column:30}},'49':{start:{line:108,column:2},end:{line:115,column:13}},'50':{start:{line:109,column:4},end:{line:109,column:13}},'51':{start:{line:110,column:7},end:{line:115,column:13}},'52':{start:{line:111,column:4},end:{line:111,column:13}},'53':{start:{line:112,column:7},end:{line:115,column:13}},'54':{start:{line:113,column:4},end:{line:113,column:13}},'55':{start:{line:114,column:7},end:{line:115,column:13}},'56':{start:{line:115,column:4},end:{line:115,column:13}},'57':{start:{line:116,column:2},end:{line:116,column:40}},'58':{start:{line:123,column:10},end:{line:123,column:24}},'59':{start:{line:124,column:2},end:{line:125,column:13}},'60':{start:{line:125,column:4},end:{line:125,column:13}},'61':{start:{line:126,column:11},end:{line:126,column:32}},'62':{start:{line:127,column:2},end:{line:131,column:3}},'63':{start:{line:128,column:4},end:{line:129,column:29}},'64':{start:{line:129,column:6},end:{line:129,column:29}},'65':{start:{line:130,column:4},end:{line:130,column:14}},'66':{start:{line:132,column:2},end:{line:133,column:13}},'67':{start:{line:133,column:4},end:{line:133,column:13}},'68':{start:{line:134,column:2},end:{line:134,column:29}},'69':{start:{line:135,column:2},end:{line:139,column:3}},'70':{start:{line:136,column:4},end:{line:137,column:29}},'71':{start:{line:137,column:6},end:{line:137,column:29}},'72':{start:{line:138,column:4},end:{line:138,column:14}},'73':{start:{line:140,column:2},end:{line:141,column:13}},'74':{start:{line:141,column:4},end:{line:141,column:13}},'75':{start:{line:142,column:2},end:{line:142,column:29}},'76':{start:{line:143,column:2},end:{line:151,column:3}},'77':{start:{line:144,column:4},end:{line:149,column:5}},'78':{start:{line:145,column:6},end:{line:148,column:31}},'79':{start:{line:146,column:8},end:{line:146,column:15}},'80':{start:{line:148,column:8},end:{line:148,column:31}},'81':{start:{line:150,column:4},end:{line:150,column:14}},'82':{start:{line:152,column:2},end:{line:152,column:11}},'83':{start:{line:164,column:2},end:{line:167,column:3}},'84':{start:{line:165,column:4},end:{line:165,column:22}},'85':{start:{line:166,column:4},end:{line:166,column:20}},'86':{start:{line:168,column:2},end:{line:179,column:3}},'87':{start:{line:169,column:4},end:{line:172,column:5}},'88':{start:{line:170,column:6},end:{line:170,column:24}},'89':{start:{line:171,column:6},end:{line:171,column:22}},'90':{start:{line:173,column:4},end:{line:178,column:5}},'91':{start:{line:174,column:6},end:{line:177,column:7}},'92':{start:{line:175,column:8},end:{line:175,column:26}},'93':{start:{line:176,column:8},end:{line:176,column:24}},'94':{start:{line:184,column:12},end:{line:184,column:42}},'95':{start:{line:185,column:10},end:{line:185,column:43}},'96':{start:{line:186,column:2},end:{line:187,column:13}},'97':{start:{line:187,column:4},end:{line:187,column:13}},'98':{start:{line:188,column:2},end:{line:191,column:3}},'99':{start:{line:189,column:4},end:{line:189,column:49}},'100':{start:{line:190,column:4},end:{line:190,column:68}},'101':{start:{line:192,column:2},end:{line:192,column:44}},'102':{start:{line:193,column:2},end:{line:193,column:30}},'103':{start:{line:200,column:16},end:{line:200,column:49}},'104':{start:{line:201,column:2},end:{line:202,column:35}},'105':{start:{line:202,column:4},end:{line:202,column:35}},'106':{start:{line:203,column:2},end:{line:203,column:25}},'107':{start:{line:204,column:14},end:{line:204,column:50}},'108':{start:{line:205,column:2},end:{line:205,column:34}},'109':{start:{line:206,column:2},end:{line:206,column:38}},'110':{start:{line:212,column:13},end:{line:212,column:53}},'111':{start:{line:213,column:2},end:{line:214,column:24}},'112':{start:{line:214,column:4},end:{line:214,column:24}},'113':{start:{line:215,column:2},end:{line:215,column:11}},'114':{start:{line:223,column:2},end:{line:236,column:3}},'115':{start:{line:224,column:14},end:{line:224,column:40}},'116':{start:{line:225,column:4},end:{line:234,column:5}},'117':{start:{line:226,column:16},end:{line:226,column:42}},'118':{start:{line:227,column:6},end:{line:233,column:7}},'119':{start:{line:228,column:8},end:{line:228,column:26}},'120':{start:{line:229,column:8},end:{line:229,column:27}},'121':{start:{line:230,column:8},end:{line:230,column:47}},'122':{start:{line:231,column:8},end:{line:231,column:47}},'123':{start:{line:232,column:8},end:{line:232,column:30}},'124':{start:{line:235,column:4},end:{line:235,column:13}},'125':{start:{line:237,column:2},end:{line:237,column:20}},'126':{start:{line:238,column:2},end:{line:238,column:21}},'127':{start:{line:239,column:2},end:{line:239,column:41}},'128':{start:{line:240,column:2},end:{line:240,column:52}},'129':{start:{line:246,column:13},end:{line:246,column:53}},'130':{start:{line:247,column:2},end:{line:250,column:3}},'131':{start:{line:248,column:16},end:{line:248,column:46}},'132':{start:{line:249,column:4},end:{line:249,column:57}},'133':{start:{line:251,column:2},end:{line:251,column:11}},'134':{start:{line:255,column:12},end:{line:255,column:32}},'135':{start:{line:256,column:2},end:{line:257,column:37}},'136':{start:{line:257,column:4},end:{line:257,column:37}},'137':{start:{line:258,column:2},end:{line:258,column:24}},'138':{start:{line:259,column:2},end:{line:259,column:21}},'139':{start:{line:260,column:2},end:{line:265,column:3}},'140':{start:{line:261,column:4},end:{line:261,column:43}},'141':{start:{line:263,column:4},end:{line:263,column:43}},'142':{start:{line:264,column:4},end:{line:264,column:43}},'143':{start:{line:266,column:2},end:{line:266,column:51}},'144':{start:{line:271,column:13},end:{line:271,column:53}},'145':{start:{line:272,column:2},end:{line:273,column:70}},'146':{start:{line:273,column:4},end:{line:273,column:70}},'147':{start:{line:274,column:2},end:{line:274,column:11}},'148':{start:{line:279,column:2},end:{line:279,column:37}},'149':{start:{line:283,column:2},end:{line:283,column:52}}},fnMap:{'0':{name:'normalizeEncoding',decl:{start:{line:31,column:9},end:{line:31,column:26}},loc:{start:{line:31,column:32},end:{line:37,column:1}},line:31},'1':{name:'StringDecoder',decl:{start:{line:43,column:9},end:{line:43,column:22}},loc:{start:{line:43,column:33},end:{line:69,column:1}},line:43},'2':{name:'(anonymous_2)',decl:{start:{line:71,column:32},end:{line:71,column:33}},loc:{start:{line:71,column:46},end:{line:88,column:1}},line:71},'3':{name:'(anonymous_3)',decl:{start:{line:96,column:35},end:{line:96,column:36}},loc:{start:{line:96,column:49},end:{line:103,column:1}},line:96},'4':{name:'utf8CheckByte',decl:{start:{line:107,column:9},end:{line:107,column:22}},loc:{start:{line:107,column:29},end:{line:117,column:1}},line:107},'5':{name:'utf8CheckIncomplete',decl:{start:{line:122,column:9},end:{line:122,column:28}},loc:{start:{line:122,column:43},end:{line:153,column:1}},line:122},'6':{name:'utf8CheckExtraBytes',decl:{start:{line:163,column:9},end:{line:163,column:28}},loc:{start:{line:163,column:43},end:{line:180,column:1}},line:163},'7':{name:'utf8FillLast',decl:{start:{line:183,column:9},end:{line:183,column:21}},loc:{start:{line:183,column:27},end:{line:194,column:1}},line:183},'8':{name:'utf8Text',decl:{start:{line:199,column:9},end:{line:199,column:17}},loc:{start:{line:199,column:26},end:{line:207,column:1}},line:199},'9':{name:'utf8End',decl:{start:{line:211,column:9},end:{line:211,column:16}},loc:{start:{line:211,column:22},end:{line:216,column:1}},line:211},'10':{name:'utf16Text',decl:{start:{line:222,column:9},end:{line:222,column:18}},loc:{start:{line:222,column:27},end:{line:241,column:1}},line:222},'11':{name:'utf16End',decl:{start:{line:245,column:9},end:{line:245,column:17}},loc:{start:{line:245,column:23},end:{line:252,column:1}},line:245},'12':{name:'base64Text',decl:{start:{line:254,column:9},end:{line:254,column:19}},loc:{start:{line:254,column:28},end:{line:267,column:1}},line:254},'13':{name:'base64End',decl:{start:{line:270,column:9},end:{line:270,column:18}},loc:{start:{line:270,column:24},end:{line:275,column:1}},line:270},'14':{name:'simpleWrite',decl:{start:{line:278,column:9},end:{line:278,column:20}},loc:{start:{line:278,column:26},end:{line:280,column:1}},line:278},'15':{name:'simpleEnd',decl:{start:{line:282,column:9},end:{line:282,column:18}},loc:{start:{line:282,column:24},end:{line:284,column:1}},line:282}},branchMap:{'0':{loc:{start:{line:33,column:2},end:{line:35,column:60}},type:'if',locations:[{start:{line:33,column:2},end:{line:35,column:60}},{start:{line:33,column:2},end:{line:35,column:60}}],line:33},'1':{loc:{start:{line:33,column:6},end:{line:34,column:67}},type:'binary-expr',locations:[{start:{line:33,column:6},end:{line:33,column:30}},{start:{line:34,column:7},end:{line:34,column:39}},{start:{line:34,column:43},end:{line:34,column:66}}],line:33},'2':{loc:{start:{line:36,column:9},end:{line:36,column:20}},type:'binary-expr',locations:[{start:{line:36,column:9},end:{line:36,column:13}},{start:{line:36,column:17},end:{line:36,column:20}}],line:36},'3':{loc:{start:{line:46,column:2},end:{line:65,column:3}},type:'switch',locations:[{start:{line:47,column:4},end:{line:51,column:12}},{start:{line:52,column:4},end:{line:55,column:12}},{start:{line:56,column:4},end:{line:60,column:12}},{start:{line:61,column:4},end:{line:64,column:13}}],line:46},'4':{loc:{start:{line:72,column:2},end:{line:73,column:14}},type:'if',locations:[{start:{line:72,column:2},end:{line:73,column:14}},{start:{line:72,column:2},end:{line:73,column:14}}],line:72},'5':{loc:{start:{line:76,column:2},end:{line:84,column:3}},type:'if',locations:[{start:{line:76,column:2},end:{line:84,column:3}},{start:{line:76,column:2},end:{line:84,column:3}}],line:76},'6':{loc:{start:{line:78,column:4},end:{line:79,column:16}},type:'if',locations:[{start:{line:78,column:4},end:{line:79,column:16}},{start:{line:78,column:4},end:{line:79,column:16}}],line:78},'7':{loc:{start:{line:85,column:2},end:{line:86,column:59}},type:'if',locations:[{start:{line:85,column:2},end:{line:86,column:59}},{start:{line:85,column:2},end:{line:86,column:59}}],line:85},'8':{loc:{start:{line:86,column:12},end:{line:86,column:57}},type:'cond-expr',locations:[{start:{line:86,column:16},end:{line:86,column:37}},{start:{line:86,column:40},end:{line:86,column:57}}],line:86},'9':{loc:{start:{line:87,column:9},end:{line:87,column:16}},type:'binary-expr',locations:[{start:{line:87,column:9},end:{line:87,column:10}},{start:{line:87,column:14},end:{line:87,column:16}}],line:87},'10':{loc:{start:{line:97,column:2},end:{line:100,column:3}},type:'if',locations:[{start:{line:97,column:2},end:{line:100,column:3}},{start:{line:97,column:2},end:{line:100,column:3}}],line:97},'11':{loc:{start:{line:108,column:2},end:{line:115,column:13}},type:'if',locations:[{start:{line:108,column:2},end:{line:115,column:13}},{start:{line:108,column:2},end:{line:115,column:13}}],line:108},'12':{loc:{start:{line:110,column:7},end:{line:115,column:13}},type:'if',locations:[{start:{line:110,column:7},end:{line:115,column:13}},{start:{line:110,column:7},end:{line:115,column:13}}],line:110},'13':{loc:{start:{line:112,column:7},end:{line:115,column:13}},type:'if',locations:[{start:{line:112,column:7},end:{line:115,column:13}},{start:{line:112,column:7},end:{line:115,column:13}}],line:112},'14':{loc:{start:{line:114,column:7},end:{line:115,column:13}},type:'if',locations:[{start:{line:114,column:7},end:{line:115,column:13}},{start:{line:114,column:7},end:{line:115,column:13}}],line:114},'15':{loc:{start:{line:116,column:10},end:{line:116,column:38}},type:'cond-expr',locations:[{start:{line:116,column:31},end:{line:116,column:33}},{start:{line:116,column:36},end:{line:116,column:38}}],line:116},'16':{loc:{start:{line:124,column:2},end:{line:125,column:13}},type:'if',locations:[{start:{line:124,column:2},end:{line:125,column:13}},{start:{line:124,column:2},end:{line:125,column:13}}],line:124},'17':{loc:{start:{line:127,column:2},end:{line:131,column:3}},type:'if',locations:[{start:{line:127,column:2},end:{line:131,column:3}},{start:{line:127,column:2},end:{line:131,column:3}}],line:127},'18':{loc:{start:{line:128,column:4},end:{line:129,column:29}},type:'if',locations:[{start:{line:128,column:4},end:{line:129,column:29}},{start:{line:128,column:4},end:{line:129,column:29}}],line:128},'19':{loc:{start:{line:132,column:2},end:{line:133,column:13}},type:'if',locations:[{start:{line:132,column:2},end:{line:133,column:13}},{start:{line:132,column:2},end:{line:133,column:13}}],line:132},'20':{loc:{start:{line:132,column:6},end:{line:132,column:26}},type:'binary-expr',locations:[{start:{line:132,column:6},end:{line:132,column:13}},{start:{line:132,column:17},end:{line:132,column:26}}],line:132},'21':{loc:{start:{line:135,column:2},end:{line:139,column:3}},type:'if',locations:[{start:{line:135,column:2},end:{line:139,column:3}},{start:{line:135,column:2},end:{line:139,column:3}}],line:135},'22':{loc:{start:{line:136,column:4},end:{line:137,column:29}},type:'if',locations:[{start:{line:136,column:4},end:{line:137,column:29}},{start:{line:136,column:4},end:{line:137,column:29}}],line:136},'23':{loc:{start:{line:140,column:2},end:{line:141,column:13}},type:'if',locations:[{start:{line:140,column:2},end:{line:141,column:13}},{start:{line:140,column:2},end:{line:141,column:13}}],line:140},'24':{loc:{start:{line:140,column:6},end:{line:140,column:26}},type:'binary-expr',locations:[{start:{line:140,column:6},end:{line:140,column:13}},{start:{line:140,column:17},end:{line:140,column:26}}],line:140},'25':{loc:{start:{line:143,column:2},end:{line:151,column:3}},type:'if',locations:[{start:{line:143,column:2},end:{line:151,column:3}},{start:{line:143,column:2},end:{line:151,column:3}}],line:143},'26':{loc:{start:{line:144,column:4},end:{line:149,column:5}},type:'if',locations:[{start:{line:144,column:4},end:{line:149,column:5}},{start:{line:144,column:4},end:{line:149,column:5}}],line:144},'27':{loc:{start:{line:145,column:6},end:{line:148,column:31}},type:'if',locations:[{start:{line:145,column:6},end:{line:148,column:31}},{start:{line:145,column:6},end:{line:148,column:31}}],line:145},'28':{loc:{start:{line:164,column:2},end:{line:167,column:3}},type:'if',locations:[{start:{line:164,column:2},end:{line:167,column:3}},{start:{line:164,column:2},end:{line:167,column:3}}],line:164},'29':{loc:{start:{line:168,column:2},end:{line:179,column:3}},type:'if',locations:[{start:{line:168,column:2},end:{line:179,column:3}},{start:{line:168,column:2},end:{line:179,column:3}}],line:168},'30':{loc:{start:{line:168,column:6},end:{line:168,column:41}},type:'binary-expr',locations:[{start:{line:168,column:6},end:{line:168,column:23}},{start:{line:168,column:27},end:{line:168,column:41}}],line:168},'31':{loc:{start:{line:169,column:4},end:{line:172,column:5}},type:'if',locations:[{start:{line:169,column:4},end:{line:172,column:5}},{start:{line:169,column:4},end:{line:172,column:5}}],line:169},'32':{loc:{start:{line:173,column:4},end:{line:178,column:5}},type:'if',locations:[{start:{line:173,column:4},end:{line:178,column:5}},{start:{line:173,column:4},end:{line:178,column:5}}],line:173},'33':{loc:{start:{line:173,column:8},end:{line:173,column:43}},type:'binary-expr',locations:[{start:{line:173,column:8},end:{line:173,column:25}},{start:{line:173,column:29},end:{line:173,column:43}}],line:173},'34':{loc:{start:{line:174,column:6},end:{line:177,column:7}},type:'if',locations:[{start:{line:174,column:6},end:{line:177,column:7}},{start:{line:174,column:6},end:{line:177,column:7}}],line:174},'35':{loc:{start:{line:186,column:2},end:{line:187,column:13}},type:'if',locations:[{start:{line:186,column:2},end:{line:187,column:13}},{start:{line:186,column:2},end:{line:187,column:13}}],line:186},'36':{loc:{start:{line:188,column:2},end:{line:191,column:3}},type:'if',locations:[{start:{line:188,column:2},end:{line:191,column:3}},{start:{line:188,column:2},end:{line:191,column:3}}],line:188},'37':{loc:{start:{line:201,column:2},end:{line:202,column:35}},type:'if',locations:[{start:{line:201,column:2},end:{line:202,column:35}},{start:{line:201,column:2},end:{line:202,column:35}}],line:201},'38':{loc:{start:{line:212,column:13},end:{line:212,column:53}},type:'cond-expr',locations:[{start:{line:212,column:33},end:{line:212,column:48}},{start:{line:212,column:51},end:{line:212,column:53}}],line:212},'39':{loc:{start:{line:212,column:13},end:{line:212,column:30}},type:'binary-expr',locations:[{start:{line:212,column:13},end:{line:212,column:16}},{start:{line:212,column:20},end:{line:212,column:30}}],line:212},'40':{loc:{start:{line:213,column:2},end:{line:214,column:24}},type:'if',locations:[{start:{line:213,column:2},end:{line:214,column:24}},{start:{line:213,column:2},end:{line:214,column:24}}],line:213},'41':{loc:{start:{line:223,column:2},end:{line:236,column:3}},type:'if',locations:[{start:{line:223,column:2},end:{line:236,column:3}},{start:{line:223,column:2},end:{line:236,column:3}}],line:223},'42':{loc:{start:{line:225,column:4},end:{line:234,column:5}},type:'if',locations:[{start:{line:225,column:4},end:{line:234,column:5}},{start:{line:225,column:4},end:{line:234,column:5}}],line:225},'43':{loc:{start:{line:227,column:6},end:{line:233,column:7}},type:'if',locations:[{start:{line:227,column:6},end:{line:233,column:7}},{start:{line:227,column:6},end:{line:233,column:7}}],line:227},'44':{loc:{start:{line:227,column:10},end:{line:227,column:36}},type:'binary-expr',locations:[{start:{line:227,column:10},end:{line:227,column:21}},{start:{line:227,column:25},end:{line:227,column:36}}],line:227},'45':{loc:{start:{line:246,column:13},end:{line:246,column:53}},type:'cond-expr',locations:[{start:{line:246,column:33},end:{line:246,column:48}},{start:{line:246,column:51},end:{line:246,column:53}}],line:246},'46':{loc:{start:{line:246,column:13},end:{line:246,column:30}},type:'binary-expr',locations:[{start:{line:246,column:13},end:{line:246,column:16}},{start:{line:246,column:20},end:{line:246,column:30}}],line:246},'47':{loc:{start:{line:247,column:2},end:{line:250,column:3}},type:'if',locations:[{start:{line:247,column:2},end:{line:250,column:3}},{start:{line:247,column:2},end:{line:250,column:3}}],line:247},'48':{loc:{start:{line:256,column:2},end:{line:257,column:37}},type:'if',locations:[{start:{line:256,column:2},end:{line:257,column:37}},{start:{line:256,column:2},end:{line:257,column:37}}],line:256},'49':{loc:{start:{line:260,column:2},end:{line:265,column:3}},type:'if',locations:[{start:{line:260,column:2},end:{line:265,column:3}},{start:{line:260,column:2},end:{line:265,column:3}}],line:260},'50':{loc:{start:{line:271,column:13},end:{line:271,column:53}},type:'cond-expr',locations:[{start:{line:271,column:33},end:{line:271,column:48}},{start:{line:271,column:51},end:{line:271,column:53}}],line:271},'51':{loc:{start:{line:271,column:13},end:{line:271,column:30}},type:'binary-expr',locations:[{start:{line:271,column:13},end:{line:271,column:16}},{start:{line:271,column:20},end:{line:271,column:30}}],line:271},'52':{loc:{start:{line:272,column:2},end:{line:273,column:70}},type:'if',locations:[{start:{line:272,column:2},end:{line:273,column:70}},{start:{line:272,column:2},end:{line:273,column:70}}],line:272},'53':{loc:{start:{line:283,column:10},end:{line:283,column:50}},type:'cond-expr',locations:[{start:{line:283,column:30},end:{line:283,column:45}},{start:{line:283,column:48},end:{line:283,column:50}}],line:283},'54':{loc:{start:{line:283,column:10},end:{line:283,column:27}},type:'binary-expr',locations:[{start:{line:283,column:10},end:{line:283,column:13}},{start:{line:283,column:17},end:{line:283,column:27}}],line:283}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0,'82':0,'83':0,'84':0,'85':0,'86':0,'87':0,'88':0,'89':0,'90':0,'91':0,'92':0,'93':0,'94':0,'95':0,'96':0,'97':0,'98':0,'99':0,'100':0,'101':0,'102':0,'103':0,'104':0,'105':0,'106':0,'107':0,'108':0,'109':0,'110':0,'111':0,'112':0,'113':0,'114':0,'115':0,'116':0,'117':0,'118':0,'119':0,'120':0,'121':0,'122':0,'123':0,'124':0,'125':0,'126':0,'127':0,'128':0,'129':0,'130':0,'131':0,'132':0,'133':0,'134':0,'135':0,'136':0,'137':0,'138':0,'139':0,'140':0,'141':0,'142':0,'143':0,'144':0,'145':0,'146':0,'147':0,'148':0,'149':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},b:{'0':[0,0],'1':[0,0,0],'2':[0,0],'3':[0,0,0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0],'14':[0,0],'15':[0,0],'16':[0,0],'17':[0,0],'18':[0,0],'19':[0,0],'20':[0,0],'21':[0,0],'22':[0,0],'23':[0,0],'24':[0,0],'25':[0,0],'26':[0,0],'27':[0,0],'28':[0,0],'29':[0,0],'30':[0,0],'31':[0,0],'32':[0,0],'33':[0,0],'34':[0,0],'35':[0,0],'36':[0,0],'37':[0,0],'38':[0,0],'39':[0,0],'40':[0,0],'41':[0,0],'42':[0,0],'43':[0,0],'44':[0,0],'45':[0,0],'46':[0,0],'47':[0,0],'48':[0,0],'49':[0,0],'50':[0,0],'51':[0,0],'52':[0,0],'53':[0,0],'54':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Buffer=(cov_40lt9qjva.s[0]++,require('buffer').Buffer);const internalUtil=(cov_40lt9qjva.s[1]++,require('internal/util'));const errors=(cov_40lt9qjva.s[2]++,require('internal/errors'));const isEncoding=(cov_40lt9qjva.s[3]++,Buffer[internalUtil.kIsEncodingSymbol]);// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc){cov_40lt9qjva.f[0]++;const nenc=(cov_40lt9qjva.s[4]++,internalUtil.normalizeEncoding(enc));cov_40lt9qjva.s[5]++;if((cov_40lt9qjva.b[1][0]++,typeof nenc!=='string')&&((cov_40lt9qjva.b[1][1]++,Buffer.isEncoding===isEncoding)||(cov_40lt9qjva.b[1][2]++,!Buffer.isEncoding(enc)))){cov_40lt9qjva.b[0][0]++;cov_40lt9qjva.s[6]++;throw new errors.TypeError('ERR_UNKNOWN_ENCODING',enc);}else{cov_40lt9qjva.b[0][1]++;}cov_40lt9qjva.s[7]++;return(cov_40lt9qjva.b[2][0]++,nenc)||(cov_40lt9qjva.b[2][1]++,enc);}// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
cov_40lt9qjva.s[8]++;exports.StringDecoder=StringDecoder;function StringDecoder(encoding){cov_40lt9qjva.f[1]++;cov_40lt9qjva.s[9]++;this.encoding=normalizeEncoding(encoding);var nb;cov_40lt9qjva.s[10]++;switch(this.encoding){case'utf16le':cov_40lt9qjva.b[3][0]++;cov_40lt9qjva.s[11]++;this.text=utf16Text;cov_40lt9qjva.s[12]++;this.end=utf16End;cov_40lt9qjva.s[13]++;nb=4;cov_40lt9qjva.s[14]++;break;case'utf8':cov_40lt9qjva.b[3][1]++;cov_40lt9qjva.s[15]++;this.fillLast=utf8FillLast;cov_40lt9qjva.s[16]++;nb=4;cov_40lt9qjva.s[17]++;break;case'base64':cov_40lt9qjva.b[3][2]++;cov_40lt9qjva.s[18]++;this.text=base64Text;cov_40lt9qjva.s[19]++;this.end=base64End;cov_40lt9qjva.s[20]++;nb=3;cov_40lt9qjva.s[21]++;break;default:cov_40lt9qjva.b[3][3]++;cov_40lt9qjva.s[22]++;this.write=simpleWrite;cov_40lt9qjva.s[23]++;this.end=simpleEnd;cov_40lt9qjva.s[24]++;return;}cov_40lt9qjva.s[25]++;this.lastNeed=0;cov_40lt9qjva.s[26]++;this.lastTotal=0;cov_40lt9qjva.s[27]++;this.lastChar=Buffer.allocUnsafe(nb);}cov_40lt9qjva.s[28]++;StringDecoder.prototype.write=function(buf){cov_40lt9qjva.f[2]++;cov_40lt9qjva.s[29]++;if(buf.length===0){cov_40lt9qjva.b[4][0]++;cov_40lt9qjva.s[30]++;return'';}else{cov_40lt9qjva.b[4][1]++;}var r;var i;cov_40lt9qjva.s[31]++;if(this.lastNeed){cov_40lt9qjva.b[5][0]++;cov_40lt9qjva.s[32]++;r=this.fillLast(buf);cov_40lt9qjva.s[33]++;if(r===undefined){cov_40lt9qjva.b[6][0]++;cov_40lt9qjva.s[34]++;return'';}else{cov_40lt9qjva.b[6][1]++;}cov_40lt9qjva.s[35]++;i=this.lastNeed;cov_40lt9qjva.s[36]++;this.lastNeed=0;}else{cov_40lt9qjva.b[5][1]++;cov_40lt9qjva.s[37]++;i=0;}cov_40lt9qjva.s[38]++;if(i<buf.length){cov_40lt9qjva.b[7][0]++;cov_40lt9qjva.s[39]++;return r?(cov_40lt9qjva.b[8][0]++,r+this.text(buf,i)):(cov_40lt9qjva.b[8][1]++,this.text(buf,i));}else{cov_40lt9qjva.b[7][1]++;}cov_40lt9qjva.s[40]++;return(cov_40lt9qjva.b[9][0]++,r)||(cov_40lt9qjva.b[9][1]++,'');};cov_40lt9qjva.s[41]++;StringDecoder.prototype.end=utf8End;// Returns only complete characters in a Buffer
cov_40lt9qjva.s[42]++;StringDecoder.prototype.text=utf8Text;// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
cov_40lt9qjva.s[43]++;StringDecoder.prototype.fillLast=function(buf){cov_40lt9qjva.f[3]++;cov_40lt9qjva.s[44]++;if(this.lastNeed<=buf.length){cov_40lt9qjva.b[10][0]++;cov_40lt9qjva.s[45]++;buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);cov_40lt9qjva.s[46]++;return this.lastChar.toString(this.encoding,0,this.lastTotal);}else{cov_40lt9qjva.b[10][1]++;}cov_40lt9qjva.s[47]++;buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);cov_40lt9qjva.s[48]++;this.lastNeed-=buf.length;};// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte){cov_40lt9qjva.f[4]++;cov_40lt9qjva.s[49]++;if(byte<=0x7F){cov_40lt9qjva.b[11][0]++;cov_40lt9qjva.s[50]++;return 0;}else{cov_40lt9qjva.b[11][1]++;cov_40lt9qjva.s[51]++;if(byte>>5===0x06){cov_40lt9qjva.b[12][0]++;cov_40lt9qjva.s[52]++;return 2;}else{cov_40lt9qjva.b[12][1]++;cov_40lt9qjva.s[53]++;if(byte>>4===0x0E){cov_40lt9qjva.b[13][0]++;cov_40lt9qjva.s[54]++;return 3;}else{cov_40lt9qjva.b[13][1]++;cov_40lt9qjva.s[55]++;if(byte>>3===0x1E){cov_40lt9qjva.b[14][0]++;cov_40lt9qjva.s[56]++;return 4;}else{cov_40lt9qjva.b[14][1]++;}}}}cov_40lt9qjva.s[57]++;return byte>>6===0x02?(cov_40lt9qjva.b[15][0]++,-1):(cov_40lt9qjva.b[15][1]++,-2);}// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self,buf,i){cov_40lt9qjva.f[5]++;var j=(cov_40lt9qjva.s[58]++,buf.length-1);cov_40lt9qjva.s[59]++;if(j<i){cov_40lt9qjva.b[16][0]++;cov_40lt9qjva.s[60]++;return 0;}else{cov_40lt9qjva.b[16][1]++;}var nb=(cov_40lt9qjva.s[61]++,utf8CheckByte(buf[j]));cov_40lt9qjva.s[62]++;if(nb>=0){cov_40lt9qjva.b[17][0]++;cov_40lt9qjva.s[63]++;if(nb>0){cov_40lt9qjva.b[18][0]++;cov_40lt9qjva.s[64]++;self.lastNeed=nb-1;}else{cov_40lt9qjva.b[18][1]++;}cov_40lt9qjva.s[65]++;return nb;}else{cov_40lt9qjva.b[17][1]++;}cov_40lt9qjva.s[66]++;if((cov_40lt9qjva.b[20][0]++,--j<i)||(cov_40lt9qjva.b[20][1]++,nb===-2)){cov_40lt9qjva.b[19][0]++;cov_40lt9qjva.s[67]++;return 0;}else{cov_40lt9qjva.b[19][1]++;}cov_40lt9qjva.s[68]++;nb=utf8CheckByte(buf[j]);cov_40lt9qjva.s[69]++;if(nb>=0){cov_40lt9qjva.b[21][0]++;cov_40lt9qjva.s[70]++;if(nb>0){cov_40lt9qjva.b[22][0]++;cov_40lt9qjva.s[71]++;self.lastNeed=nb-2;}else{cov_40lt9qjva.b[22][1]++;}cov_40lt9qjva.s[72]++;return nb;}else{cov_40lt9qjva.b[21][1]++;}cov_40lt9qjva.s[73]++;if((cov_40lt9qjva.b[24][0]++,--j<i)||(cov_40lt9qjva.b[24][1]++,nb===-2)){cov_40lt9qjva.b[23][0]++;cov_40lt9qjva.s[74]++;return 0;}else{cov_40lt9qjva.b[23][1]++;}cov_40lt9qjva.s[75]++;nb=utf8CheckByte(buf[j]);cov_40lt9qjva.s[76]++;if(nb>=0){cov_40lt9qjva.b[25][0]++;cov_40lt9qjva.s[77]++;if(nb>0){cov_40lt9qjva.b[26][0]++;cov_40lt9qjva.s[78]++;if(nb===2){cov_40lt9qjva.b[27][0]++;cov_40lt9qjva.s[79]++;nb=0;}else{cov_40lt9qjva.b[27][1]++;cov_40lt9qjva.s[80]++;self.lastNeed=nb-3;}}else{cov_40lt9qjva.b[26][1]++;}cov_40lt9qjva.s[81]++;return nb;}else{cov_40lt9qjva.b[25][1]++;}cov_40lt9qjva.s[82]++;return 0;}// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self,buf,p){cov_40lt9qjva.f[6]++;cov_40lt9qjva.s[83]++;if((buf[0]&0xC0)!==0x80){cov_40lt9qjva.b[28][0]++;cov_40lt9qjva.s[84]++;self.lastNeed=0;cov_40lt9qjva.s[85]++;return'\ufffd';}else{cov_40lt9qjva.b[28][1]++;}cov_40lt9qjva.s[86]++;if((cov_40lt9qjva.b[30][0]++,self.lastNeed>1)&&(cov_40lt9qjva.b[30][1]++,buf.length>1)){cov_40lt9qjva.b[29][0]++;cov_40lt9qjva.s[87]++;if((buf[1]&0xC0)!==0x80){cov_40lt9qjva.b[31][0]++;cov_40lt9qjva.s[88]++;self.lastNeed=1;cov_40lt9qjva.s[89]++;return'\ufffd';}else{cov_40lt9qjva.b[31][1]++;}cov_40lt9qjva.s[90]++;if((cov_40lt9qjva.b[33][0]++,self.lastNeed>2)&&(cov_40lt9qjva.b[33][1]++,buf.length>2)){cov_40lt9qjva.b[32][0]++;cov_40lt9qjva.s[91]++;if((buf[2]&0xC0)!==0x80){cov_40lt9qjva.b[34][0]++;cov_40lt9qjva.s[92]++;self.lastNeed=2;cov_40lt9qjva.s[93]++;return'\ufffd';}else{cov_40lt9qjva.b[34][1]++;}}else{cov_40lt9qjva.b[32][1]++;}}else{cov_40lt9qjva.b[29][1]++;}}// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf){cov_40lt9qjva.f[7]++;const p=(cov_40lt9qjva.s[94]++,this.lastTotal-this.lastNeed);var r=(cov_40lt9qjva.s[95]++,utf8CheckExtraBytes(this,buf,p));cov_40lt9qjva.s[96]++;if(r!==undefined){cov_40lt9qjva.b[35][0]++;cov_40lt9qjva.s[97]++;return r;}else{cov_40lt9qjva.b[35][1]++;}cov_40lt9qjva.s[98]++;if(this.lastNeed<=buf.length){cov_40lt9qjva.b[36][0]++;cov_40lt9qjva.s[99]++;buf.copy(this.lastChar,p,0,this.lastNeed);cov_40lt9qjva.s[100]++;return this.lastChar.toString(this.encoding,0,this.lastTotal);}else{cov_40lt9qjva.b[36][1]++;}cov_40lt9qjva.s[101]++;buf.copy(this.lastChar,p,0,buf.length);cov_40lt9qjva.s[102]++;this.lastNeed-=buf.length;}// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf,i){cov_40lt9qjva.f[8]++;const total=(cov_40lt9qjva.s[103]++,utf8CheckIncomplete(this,buf,i));cov_40lt9qjva.s[104]++;if(!this.lastNeed){cov_40lt9qjva.b[37][0]++;cov_40lt9qjva.s[105]++;return buf.toString('utf8',i);}else{cov_40lt9qjva.b[37][1]++;}cov_40lt9qjva.s[106]++;this.lastTotal=total;const end=(cov_40lt9qjva.s[107]++,buf.length-(total-this.lastNeed));cov_40lt9qjva.s[108]++;buf.copy(this.lastChar,0,end);cov_40lt9qjva.s[109]++;return buf.toString('utf8',i,end);}// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf){cov_40lt9qjva.f[9]++;const r=(cov_40lt9qjva.s[110]++,(cov_40lt9qjva.b[39][0]++,buf)&&(cov_40lt9qjva.b[39][1]++,buf.length)?(cov_40lt9qjva.b[38][0]++,this.write(buf)):(cov_40lt9qjva.b[38][1]++,''));cov_40lt9qjva.s[111]++;if(this.lastNeed){cov_40lt9qjva.b[40][0]++;cov_40lt9qjva.s[112]++;return r+'\ufffd';}else{cov_40lt9qjva.b[40][1]++;}cov_40lt9qjva.s[113]++;return r;}// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf,i){cov_40lt9qjva.f[10]++;cov_40lt9qjva.s[114]++;if((buf.length-i)%2===0){cov_40lt9qjva.b[41][0]++;const r=(cov_40lt9qjva.s[115]++,buf.toString('utf16le',i));cov_40lt9qjva.s[116]++;if(r){cov_40lt9qjva.b[42][0]++;const c=(cov_40lt9qjva.s[117]++,r.charCodeAt(r.length-1));cov_40lt9qjva.s[118]++;if((cov_40lt9qjva.b[44][0]++,c>=0xD800)&&(cov_40lt9qjva.b[44][1]++,c<=0xDBFF)){cov_40lt9qjva.b[43][0]++;cov_40lt9qjva.s[119]++;this.lastNeed=2;cov_40lt9qjva.s[120]++;this.lastTotal=4;cov_40lt9qjva.s[121]++;this.lastChar[0]=buf[buf.length-2];cov_40lt9qjva.s[122]++;this.lastChar[1]=buf[buf.length-1];cov_40lt9qjva.s[123]++;return r.slice(0,-1);}else{cov_40lt9qjva.b[43][1]++;}}else{cov_40lt9qjva.b[42][1]++;}cov_40lt9qjva.s[124]++;return r;}else{cov_40lt9qjva.b[41][1]++;}cov_40lt9qjva.s[125]++;this.lastNeed=1;cov_40lt9qjva.s[126]++;this.lastTotal=2;cov_40lt9qjva.s[127]++;this.lastChar[0]=buf[buf.length-1];cov_40lt9qjva.s[128]++;return buf.toString('utf16le',i,buf.length-1);}// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf){cov_40lt9qjva.f[11]++;const r=(cov_40lt9qjva.s[129]++,(cov_40lt9qjva.b[46][0]++,buf)&&(cov_40lt9qjva.b[46][1]++,buf.length)?(cov_40lt9qjva.b[45][0]++,this.write(buf)):(cov_40lt9qjva.b[45][1]++,''));cov_40lt9qjva.s[130]++;if(this.lastNeed){cov_40lt9qjva.b[47][0]++;const end=(cov_40lt9qjva.s[131]++,this.lastTotal-this.lastNeed);cov_40lt9qjva.s[132]++;return r+this.lastChar.toString('utf16le',0,end);}else{cov_40lt9qjva.b[47][1]++;}cov_40lt9qjva.s[133]++;return r;}function base64Text(buf,i){cov_40lt9qjva.f[12]++;const n=(cov_40lt9qjva.s[134]++,(buf.length-i)%3);cov_40lt9qjva.s[135]++;if(n===0){cov_40lt9qjva.b[48][0]++;cov_40lt9qjva.s[136]++;return buf.toString('base64',i);}else{cov_40lt9qjva.b[48][1]++;}cov_40lt9qjva.s[137]++;this.lastNeed=3-n;cov_40lt9qjva.s[138]++;this.lastTotal=3;cov_40lt9qjva.s[139]++;if(n===1){cov_40lt9qjva.b[49][0]++;cov_40lt9qjva.s[140]++;this.lastChar[0]=buf[buf.length-1];}else{cov_40lt9qjva.b[49][1]++;cov_40lt9qjva.s[141]++;this.lastChar[0]=buf[buf.length-2];cov_40lt9qjva.s[142]++;this.lastChar[1]=buf[buf.length-1];}cov_40lt9qjva.s[143]++;return buf.toString('base64',i,buf.length-n);}function base64End(buf){cov_40lt9qjva.f[13]++;const r=(cov_40lt9qjva.s[144]++,(cov_40lt9qjva.b[51][0]++,buf)&&(cov_40lt9qjva.b[51][1]++,buf.length)?(cov_40lt9qjva.b[50][0]++,this.write(buf)):(cov_40lt9qjva.b[50][1]++,''));cov_40lt9qjva.s[145]++;if(this.lastNeed){cov_40lt9qjva.b[52][0]++;cov_40lt9qjva.s[146]++;return r+this.lastChar.toString('base64',0,3-this.lastNeed);}else{cov_40lt9qjva.b[52][1]++;}cov_40lt9qjva.s[147]++;return r;}// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf){cov_40lt9qjva.f[14]++;cov_40lt9qjva.s[148]++;return buf.toString(this.encoding);}function simpleEnd(buf){cov_40lt9qjva.f[15]++;cov_40lt9qjva.s[149]++;return(cov_40lt9qjva.b[54][0]++,buf)&&(cov_40lt9qjva.b[54][1]++,buf.length)?(cov_40lt9qjva.b[53][0]++,this.write(buf)):(cov_40lt9qjva.b[53][1]++,'');}