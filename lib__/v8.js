// Copyright (c) 2014, StrongLoop Inc.
//
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
'use strict';var cov_14o7e5nkdi=function(){var path='v8.js',hash='1a194debd0189c56d6f7d4776e2cde14e0d358f2',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'v8.js',statementMap:{'0':{start:{line:17,column:19},end:{line:17,column:36}},'1':{start:{line:21,column:4},end:{line:21,column:29}},'2':{start:{line:22,column:17},end:{line:22,column:42}},'3':{start:{line:23,column:27},end:{line:23,column:51}},'4':{start:{line:24,column:23},end:{line:24,column:49}},'5':{start:{line:57,column:4},end:{line:57,column:25}},'6':{start:{line:59,column:28},end:{line:59,column:46}},'7':{start:{line:62,column:4},end:{line:62,column:47}},'8':{start:{line:65,column:4},end:{line:65,column:52}},'9':{start:{line:68,column:17},end:{line:68,column:37}},'10':{start:{line:70,column:2},end:{line:70,column:36}},'11':{start:{line:72,column:2},end:{line:82,column:4}},'12':{start:{line:86,column:30},end:{line:86,column:60}},'13':{start:{line:87,column:17},end:{line:87,column:42}},'14':{start:{line:88,column:2},end:{line:88,column:41}},'15':{start:{line:90,column:2},end:{line:99,column:3}},'16':{start:{line:91,column:27},end:{line:91,column:66}},'17':{start:{line:92,column:4},end:{line:98,column:6}},'18':{start:{line:101,column:2},end:{line:101,column:29}},'19':{start:{line:107,column:0},end:{line:107,column:48}},'20':{start:{line:109,column:0},end:{line:116,column:2}},'21':{start:{line:110,column:17},end:{line:110,column:43}},'22':{start:{line:113,column:2},end:{line:115,column:32}},'23':{start:{line:125,column:29},end:{line:127,column:67}},'24':{start:{line:129,column:35},end:{line:129,column:44}},'25':{start:{line:132,column:16},end:{line:132,column:33}},'26':{start:{line:133,column:2},end:{line:136,column:3}},'27':{start:{line:134,column:16},end:{line:134,column:47}},'28':{start:{line:135,column:4},end:{line:135,column:43}},'29':{start:{line:139,column:31},end:{line:139,column:68}},'30':{start:{line:143,column:4},end:{line:143,column:12}},'31':{start:{line:145,column:4},end:{line:145,column:54}},'32':{start:{line:149,column:12},end:{line:149,column:13}},'33':{start:{line:150,column:4},end:{line:159,column:5}},'34':{start:{line:151,column:6},end:{line:151,column:33}},'35':{start:{line:153,column:18},end:{line:153,column:40}},'36':{start:{line:154,column:6},end:{line:154,column:46}},'37':{start:{line:156,column:6},end:{line:158,column:7}},'38':{start:{line:157,column:8},end:{line:157,column:78}},'39':{start:{line:160,column:4},end:{line:160,column:24}},'40':{start:{line:161,column:4},end:{line:161,column:40}},'41':{start:{line:162,column:4},end:{line:164,column:58}},'42':{start:{line:170,column:4},end:{line:170,column:18}},'43':{start:{line:174,column:22},end:{line:174,column:39}},'44':{start:{line:175,column:17},end:{line:175,column:48}},'45':{start:{line:176,column:23},end:{line:176,column:40}},'46':{start:{line:177,column:23},end:{line:177,column:53}},'47':{start:{line:178,column:30},end:{line:178,column:57}},'48':{start:{line:180,column:19},end:{line:180,column:54}},'49':{start:{line:181,column:4},end:{line:192,column:5}},'50':{start:{line:182,column:6},end:{line:184,column:54}},'51':{start:{line:187,column:26},end:{line:187,column:56}},'52':{start:{line:188,column:6},end:{line:188,column:77}},'53':{start:{line:189,column:6},end:{line:191,column:54}},'54':{start:{line:197,column:14},end:{line:197,column:37}},'55':{start:{line:198,column:2},end:{line:198,column:20}},'56':{start:{line:199,column:2},end:{line:199,column:24}},'57':{start:{line:200,column:2},end:{line:200,column:29}},'58':{start:{line:204,column:14},end:{line:204,column:45}},'59':{start:{line:205,column:2},end:{line:205,column:19}},'60':{start:{line:206,column:2},end:{line:206,column:25}},'61':{start:{line:209,column:0},end:{line:220,column:2}}},fnMap:{'0':{name:'getHeapStatistics',decl:{start:{line:67,column:9},end:{line:67,column:26}},loc:{start:{line:67,column:29},end:{line:83,column:1}},line:67},'1':{name:'getHeapSpaceStatistics',decl:{start:{line:85,column:9},end:{line:85,column:31}},loc:{start:{line:85,column:34},end:{line:102,column:1}},line:85},'2':{name:'readRawBytes',decl:{start:{line:109,column:47},end:{line:109,column:59}},loc:{start:{line:109,column:68},end:{line:116,column:1}},line:109},'3':{name:'(anonymous_3)',decl:{start:{line:142,column:2},end:{line:142,column:3}},loc:{start:{line:142,column:16},end:{line:146,column:3}},line:142},'4':{name:'(anonymous_4)',decl:{start:{line:148,column:2},end:{line:148,column:3}},loc:{start:{line:148,column:27},end:{line:165,column:3}},line:148},'5':{name:'(anonymous_5)',decl:{start:{line:169,column:2},end:{line:169,column:3}},loc:{start:{line:169,column:22},end:{line:171,column:3}},line:169},'6':{name:'(anonymous_6)',decl:{start:{line:173,column:2},end:{line:173,column:3}},loc:{start:{line:173,column:20},end:{line:193,column:3}},line:173},'7':{name:'serialize',decl:{start:{line:196,column:9},end:{line:196,column:18}},loc:{start:{line:196,column:26},end:{line:201,column:1}},line:196},'8':{name:'deserialize',decl:{start:{line:203,column:9},end:{line:203,column:20}},loc:{start:{line:203,column:29},end:{line:207,column:1}},line:203}},branchMap:{'0':{loc:{start:{line:150,column:4},end:{line:159,column:5}},type:'if',locations:[{start:{line:150,column:4},end:{line:159,column:5}},{start:{line:150,column:4},end:{line:159,column:5}}],line:150},'1':{loc:{start:{line:156,column:6},end:{line:158,column:7}},type:'if',locations:[{start:{line:156,column:6},end:{line:158,column:7}},{start:{line:156,column:6},end:{line:158,column:7}}],line:156},'2':{loc:{start:{line:178,column:30},end:{line:178,column:57}},type:'binary-expr',locations:[{start:{line:178,column:30},end:{line:178,column:52}},{start:{line:178,column:56},end:{line:178,column:57}}],line:178},'3':{loc:{start:{line:181,column:4},end:{line:192,column:5}},type:'if',locations:[{start:{line:181,column:4},end:{line:192,column:5}},{start:{line:181,column:4},end:{line:192,column:5}}],line:181}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{Buffer}=(cov_14o7e5nkdi.s[0]++,require('buffer'));const{Serializer:_Serializer,Deserializer:_Deserializer}=(cov_14o7e5nkdi.s[1]++,process.binding('serdes'));const{copy}=(cov_14o7e5nkdi.s[2]++,process.binding('buffer'));const{objectToString}=(cov_14o7e5nkdi.s[3]++,require('internal/util'));const{FastBuffer}=(cov_14o7e5nkdi.s[4]++,require('internal/buffer'));// Calling exposed c++ functions directly throws exception as it expected to be
// called with new operator and caused an assert to fire.
// Creating JS wrapper so that it gets caught at JS layer.
class Serializer extends _Serializer{}class Deserializer extends _Deserializer{}const{cachedDataVersionTag,setFlagsFromString,heapStatisticsArrayBuffer,heapSpaceStatisticsArrayBuffer,updateHeapStatisticsArrayBuffer,updateHeapSpaceStatisticsArrayBuffer,// Properties for heap and heap space statistics buffer extraction.
kTotalHeapSizeIndex,kTotalHeapSizeExecutableIndex,kTotalPhysicalSizeIndex,kTotalAvailableSize,kUsedHeapSizeIndex,kHeapSizeLimitIndex,kDoesZapGarbageIndex,kMallocedMemoryIndex,kPeakMallocedMemoryIndex,kHeapSpaces,kHeapSpaceStatisticsPropertiesCount,kSpaceSizeIndex,kSpaceUsedSizeIndex,kSpaceAvailableSizeIndex,kPhysicalSpaceSizeIndex}=(cov_14o7e5nkdi.s[5]++,process.binding('v8'));const kNumberOfHeapSpaces=(cov_14o7e5nkdi.s[6]++,kHeapSpaces.length);const heapStatisticsBuffer=(cov_14o7e5nkdi.s[7]++,new Float64Array(heapStatisticsArrayBuffer));const heapSpaceStatisticsBuffer=(cov_14o7e5nkdi.s[8]++,new Float64Array(heapSpaceStatisticsArrayBuffer));function getHeapStatistics(){cov_14o7e5nkdi.f[0]++;const buffer=(cov_14o7e5nkdi.s[9]++,heapStatisticsBuffer);cov_14o7e5nkdi.s[10]++;updateHeapStatisticsArrayBuffer();cov_14o7e5nkdi.s[11]++;return{'total_heap_size':buffer[kTotalHeapSizeIndex],'total_heap_size_executable':buffer[kTotalHeapSizeExecutableIndex],'total_physical_size':buffer[kTotalPhysicalSizeIndex],'total_available_size':buffer[kTotalAvailableSize],'used_heap_size':buffer[kUsedHeapSizeIndex],'heap_size_limit':buffer[kHeapSizeLimitIndex],'malloced_memory':buffer[kMallocedMemoryIndex],'peak_malloced_memory':buffer[kPeakMallocedMemoryIndex],'does_zap_garbage':buffer[kDoesZapGarbageIndex]};}function getHeapSpaceStatistics(){cov_14o7e5nkdi.f[1]++;const heapSpaceStatistics=(cov_14o7e5nkdi.s[12]++,new Array(kNumberOfHeapSpaces));const buffer=(cov_14o7e5nkdi.s[13]++,heapSpaceStatisticsBuffer);cov_14o7e5nkdi.s[14]++;updateHeapSpaceStatisticsArrayBuffer();cov_14o7e5nkdi.s[15]++;for(var i=0;i<kNumberOfHeapSpaces;i++){const propertyOffset=(cov_14o7e5nkdi.s[16]++,i*kHeapSpaceStatisticsPropertiesCount);cov_14o7e5nkdi.s[17]++;heapSpaceStatistics[i]={space_name:kHeapSpaces[i],space_size:buffer[propertyOffset+kSpaceSizeIndex],space_used_size:buffer[propertyOffset+kSpaceUsedSizeIndex],space_available_size:buffer[propertyOffset+kSpaceAvailableSizeIndex],physical_space_size:buffer[propertyOffset+kPhysicalSpaceSizeIndex]};}cov_14o7e5nkdi.s[18]++;return heapSpaceStatistics;}/* V8 serialization API *//* JS methods for the base objects */cov_14o7e5nkdi.s[19]++;Serializer.prototype._getDataCloneError=Error;cov_14o7e5nkdi.s[20]++;Deserializer.prototype.readRawBytes=function readRawBytes(length){cov_14o7e5nkdi.f[2]++;const offset=(cov_14o7e5nkdi.s[21]++,this._readRawBytes(length));// `this.buffer` can be a Buffer or a plain Uint8Array, so just calling
// `.slice()` doesn't work.
cov_14o7e5nkdi.s[22]++;return new FastBuffer(this.buffer.buffer,this.buffer.byteOffset+offset,length);};/* Keep track of how to handle different ArrayBufferViews.
 * The default Serializer for Node does not use the V8 methods for serializing
 * those objects because Node's `Buffer` objects use pooled allocation in many
 * cases, and their underlying `ArrayBuffer`s would show up in the
 * serialization. Because a) those may contain sensitive data and the user
 * may not be aware of that and b) they are often much larger than the `Buffer`
 * itself, custom serialization is applied. */const arrayBufferViewTypes=(cov_14o7e5nkdi.s[23]++,[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,DataView]);const arrayBufferViewTypeToIndex=(cov_14o7e5nkdi.s[24]++,new Map());{const dummy=(cov_14o7e5nkdi.s[25]++,new ArrayBuffer());cov_14o7e5nkdi.s[26]++;for(const[i,ctor]of arrayBufferViewTypes.entries()){const tag=(cov_14o7e5nkdi.s[27]++,objectToString(new ctor(dummy)));cov_14o7e5nkdi.s[28]++;arrayBufferViewTypeToIndex.set(tag,i);}}const bufferConstructorIndex=(cov_14o7e5nkdi.s[29]++,arrayBufferViewTypes.push(Buffer)-1);class DefaultSerializer extends Serializer{constructor(){cov_14o7e5nkdi.f[3]++;cov_14o7e5nkdi.s[30]++;super();cov_14o7e5nkdi.s[31]++;this._setTreatArrayBufferViewsAsHostObjects(true);}_writeHostObject(abView){cov_14o7e5nkdi.f[4]++;let i=(cov_14o7e5nkdi.s[32]++,0);cov_14o7e5nkdi.s[33]++;if(abView.constructor===Buffer){cov_14o7e5nkdi.b[0][0]++;cov_14o7e5nkdi.s[34]++;i=bufferConstructorIndex;}else{cov_14o7e5nkdi.b[0][1]++;const tag=(cov_14o7e5nkdi.s[35]++,objectToString(abView));cov_14o7e5nkdi.s[36]++;i=arrayBufferViewTypeToIndex.get(tag);cov_14o7e5nkdi.s[37]++;if(i===undefined){cov_14o7e5nkdi.b[1][0]++;cov_14o7e5nkdi.s[38]++;throw new this._getDataCloneError(`Unknown host object type: ${tag}`);}else{cov_14o7e5nkdi.b[1][1]++;}}cov_14o7e5nkdi.s[39]++;this.writeUint32(i);cov_14o7e5nkdi.s[40]++;this.writeUint32(abView.byteLength);cov_14o7e5nkdi.s[41]++;this.writeRawBytes(new Uint8Array(abView.buffer,abView.byteOffset,abView.byteLength));}}class DefaultDeserializer extends Deserializer{constructor(buffer){cov_14o7e5nkdi.f[5]++;cov_14o7e5nkdi.s[42]++;super(buffer);}_readHostObject(){cov_14o7e5nkdi.f[6]++;const typeIndex=(cov_14o7e5nkdi.s[43]++,this.readUint32());const ctor=(cov_14o7e5nkdi.s[44]++,arrayBufferViewTypes[typeIndex]);const byteLength=(cov_14o7e5nkdi.s[45]++,this.readUint32());const byteOffset=(cov_14o7e5nkdi.s[46]++,this._readRawBytes(byteLength));const BYTES_PER_ELEMENT=(cov_14o7e5nkdi.s[47]++,(cov_14o7e5nkdi.b[2][0]++,ctor.BYTES_PER_ELEMENT)||(cov_14o7e5nkdi.b[2][1]++,1));const offset=(cov_14o7e5nkdi.s[48]++,this.buffer.byteOffset+byteOffset);cov_14o7e5nkdi.s[49]++;if(offset%BYTES_PER_ELEMENT===0){cov_14o7e5nkdi.b[3][0]++;cov_14o7e5nkdi.s[50]++;return new ctor(this.buffer.buffer,offset,byteLength/BYTES_PER_ELEMENT);}else{cov_14o7e5nkdi.b[3][1]++;// Copy to an aligned buffer first.
const buffer_copy=(cov_14o7e5nkdi.s[51]++,Buffer.allocUnsafe(byteLength));cov_14o7e5nkdi.s[52]++;copy(this.buffer,buffer_copy,0,byteOffset,byteOffset+byteLength);cov_14o7e5nkdi.s[53]++;return new ctor(buffer_copy.buffer,buffer_copy.byteOffset,byteLength/BYTES_PER_ELEMENT);}}}function serialize(value){cov_14o7e5nkdi.f[7]++;const ser=(cov_14o7e5nkdi.s[54]++,new DefaultSerializer());cov_14o7e5nkdi.s[55]++;ser.writeHeader();cov_14o7e5nkdi.s[56]++;ser.writeValue(value);cov_14o7e5nkdi.s[57]++;return ser.releaseBuffer();}function deserialize(buffer){cov_14o7e5nkdi.f[8]++;const der=(cov_14o7e5nkdi.s[58]++,new DefaultDeserializer(buffer));cov_14o7e5nkdi.s[59]++;der.readHeader();cov_14o7e5nkdi.s[60]++;return der.readValue();}cov_14o7e5nkdi.s[61]++;module.exports=exports={cachedDataVersionTag,getHeapStatistics,getHeapSpaceStatistics,setFlagsFromString,Serializer,Deserializer,DefaultSerializer,DefaultDeserializer,deserialize,serialize};